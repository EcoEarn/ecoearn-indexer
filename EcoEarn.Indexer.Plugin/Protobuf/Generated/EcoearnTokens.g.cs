// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ecoearn_tokens.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace EcoEarn.Contracts.Tokens {

  /// <summary>Holder for reflection information generated from ecoearn_tokens.proto</summary>
  public static partial class EcoearnTokensReflection {

    #region Descriptor
    /// <summary>File descriptor for ecoearn_tokens.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EcoearnTokensReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRlY29lYXJuX3Rva2Vucy5wcm90bxoPYWVsZi9jb3JlLnByb3RvGhJhZWxm",
            "L29wdGlvbnMucHJvdG8aC2FjczEyLnByb3RvGhtnb29nbGUvcHJvdG9idWYv",
            "ZW1wdHkucHJvdG8aH2dvb2dsZS9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8i",
            "SgoNUmVnaXN0ZXJJbnB1dBIbCgdkYXBwX2lkGAEgASgLMgouYWVsZi5IYXNo",
            "EhwKBWFkbWluGAIgASgLMg0uYWVsZi5BZGRyZXNzIkUKCERhcHBJbmZvEhsK",
            "B2RhcHBfaWQYASABKAsyCi5hZWxmLkhhc2gSHAoFYWRtaW4YAiABKAsyDS5h",
            "ZWxmLkFkZHJlc3MizgMKFUNyZWF0ZVRva2Vuc1Bvb2xJbnB1dBIbCgdkYXBw",
            "X2lkGAEgASgLMgouYWVsZi5IYXNoEhQKDHJld2FyZF90b2tlbhgCIAEoCRIS",
            "CgpzdGFydF90aW1lGAMgASgDEhAKCGVuZF90aW1lGAQgASgDEhkKEXJld2Fy",
            "ZF9wZXJfc2Vjb25kGAUgASgDEiUKDnVwZGF0ZV9hZGRyZXNzGAYgASgLMg0u",
            "YWVsZi5BZGRyZXNzEhUKDXN0YWtpbmdfdG9rZW4YByABKAkSGgoSZml4ZWRf",
            "Ym9vc3RfZmFjdG9yGAggASgDEhYKDm1pbmltdW1fYW1vdW50GAkgASgDEhYK",
            "DnJlbGVhc2VfcGVyaW9kGAogASgDEh4KFm1heGltdW1fc3Rha2VfZHVyYXRp",
            "b24YCyABKAMSLAoVcmV3YXJkX3Rva2VuX2NvbnRyYWN0GAwgASgLMg0uYWVs",
            "Zi5BZGRyZXNzEisKFHN0YWtlX3Rva2VuX2NvbnRyYWN0GA0gASgLMg0uYWVs",
            "Zi5BZGRyZXNzEhwKFG1pbmltdW1fY2xhaW1fYW1vdW50GA4gASgDEh4KFm1p",
            "bmltdW1fc3Rha2VfZHVyYXRpb24YDyABKAMi5AMKEFRva2Vuc1Bvb2xDb25m",
            "aWcSFAoMcmV3YXJkX3Rva2VuGAEgASgJEi4KCnN0YXJ0X3RpbWUYAiABKAsy",
            "Gi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEiwKCGVuZF90aW1lGAMgASgL",
            "MhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIZChFyZXdhcmRfcGVyX3Nl",
            "Y29uZBgEIAEoAxIlCg51cGRhdGVfYWRkcmVzcxgFIAEoCzINLmFlbGYuQWRk",
            "cmVzcxIVCg1zdGFraW5nX3Rva2VuGAYgASgJEhoKEmZpeGVkX2Jvb3N0X2Zh",
            "Y3RvchgHIAEoAxIWCg5taW5pbXVtX2Ftb3VudBgIIAEoAxIWCg5yZWxlYXNl",
            "X3BlcmlvZBgJIAEoAxIeChZtYXhpbXVtX3N0YWtlX2R1cmF0aW9uGAogASgD",
            "EiwKFXJld2FyZF90b2tlbl9jb250cmFjdBgLIAEoCzINLmFlbGYuQWRkcmVz",
            "cxIrChRzdGFrZV90b2tlbl9jb250cmFjdBgMIAEoCzINLmFlbGYuQWRkcmVz",
            "cxIcChRtaW5pbXVtX2NsYWltX2Ftb3VudBgNIAEoAxIeChZtaW5pbXVtX3N0",
            "YWtlX2R1cmF0aW9uGA4gASgDIkoKGVNldFRva2Vuc1Bvb2xFbmRUaW1lSW5w",
            "dXQSGwoHcG9vbF9pZBgBIAEoCzIKLmFlbGYuSGFzaBIQCghlbmRfdGltZRgC",
            "IAEoAyJlCh9TZXRUb2tlbnNQb29sVXBkYXRlQWRkcmVzc0lucHV0EhsKB3Bv",
            "b2xfaWQYASABKAsyCi5hZWxmLkhhc2gSJQoOdXBkYXRlX2FkZHJlc3MYAiAB",
            "KAsyDS5hZWxmLkFkZHJlc3MiXAolU2V0VG9rZW5zUG9vbFJld2FyZFJlbGVh",
            "c2VQZXJpb2RJbnB1dBIbCgdwb29sX2lkGAEgASgLMgouYWVsZi5IYXNoEhYK",
            "DnJlbGVhc2VfcGVyaW9kGAIgASgDIrIBCh1TZXRUb2tlbnNQb29sU3Rha2VD",
            "b25maWdJbnB1dBIbCgdwb29sX2lkGAEgASgLMgouYWVsZi5IYXNoEhYKDm1p",
            "bmltdW1fYW1vdW50GAIgASgDEh4KFm1heGltdW1fc3Rha2VfZHVyYXRpb24Y",
            "AyABKAMSHAoUbWluaW11bV9jbGFpbV9hbW91bnQYBCABKAMSHgoWbWluaW11",
            "bV9zdGFrZV9kdXJhdGlvbhgFIAEoAyJdCiJTZXRUb2tlbnNQb29sRml4ZWRC",
            "b29zdEZhY3RvcklucHV0EhsKB3Bvb2xfaWQYASABKAsyCi5hZWxmLkhhc2gS",
            "GgoSZml4ZWRfYm9vc3RfZmFjdG9yGAIgASgDIlsKIVNldFRva2Vuc1Bvb2xS",
            "ZXdhcmRQZXJTZWNvbmRJbnB1dBIbCgdwb29sX2lkGAEgASgLMgouYWVsZi5I",
            "YXNoEhkKEXJld2FyZF9wZXJfc2Vjb25kGAIgASgDIkEKEUdldFBvb2xJbmZv",
            "T3V0cHV0EhwKCXBvb2xfaW5mbxgBIAEoCzIJLlBvb2xJbmZvEg4KBnN0YXR1",
            "cxgCIAEoCCKUAQoIUG9vbEluZm8SGwoHZGFwcF9pZBgBIAEoCzIKLmFlbGYu",
            "SGFzaBIbCgdwb29sX2lkGAIgASgLMgouYWVsZi5IYXNoEiEKBmNvbmZpZxgD",
            "IAEoCzIRLlRva2Vuc1Bvb2xDb25maWcSKwoQcHJlY2lzaW9uX2ZhY3RvchgE",
            "IAEoCzIRLmFlbGYuQmlnSW50VmFsdWUirAEKCFBvb2xEYXRhEhsKB3Bvb2xf",
            "aWQYASABKAsyCi5hZWxmLkhhc2gSLgoTYWNjX3Rva2VuX3Blcl9zaGFyZRgC",
            "IAEoCzIRLmFlbGYuQmlnSW50VmFsdWUSNgoSbGFzdF9yZXdhcmRfc2Vjb25k",
            "GAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIbChN0b3RhbF9z",
            "dGFrZWRfYW1vdW50GAQgASgDIkkKClN0YWtlSW5wdXQSGwoHcG9vbF9pZBgB",
            "IAEoCzIKLmFlbGYuSGFzaBIOCgZhbW91bnQYAiABKAMSDgoGcGVyaW9kGAMg",
            "ASgDIvMDCglTdGFrZUluZm8SHAoIc3Rha2VfaWQYASABKAsyCi5hZWxmLkhh",
            "c2gSGwoHcG9vbF9pZBgCIAEoCzIKLmFlbGYuSGFzaBIVCg1zdGFrZWRfYW1v",
            "dW50GAMgASgDEhsKE2Vhcmx5X3N0YWtlZF9hbW91bnQYBCABKAMSGwoTc3Rh",
            "a2VkX2Jsb2NrX251bWJlchgFIAEoAxIvCgtzdGFrZWRfdGltZRgGIAEoCzIa",
            "Lmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASDgoGcGVyaW9kGAcgASgDEh4K",
            "B2FjY291bnQYCCABKAsyDS5hZWxmLkFkZHJlc3MSFgoOYm9vc3RlZF9hbW91",
            "bnQYCSABKAMSEwoLcmV3YXJkX2RlYnQYCiABKAMSLwoLdW5sb2NrX3RpbWUY",
            "CyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEhUKDXJld2FyZF9h",
            "bW91bnQYDCABKAMSHAoUbG9ja2VkX3Jld2FyZF9hbW91bnQYDSABKAMSFgoO",
            "Y2xhaW1lZF9hbW91bnQYDiABKAMSFQoNc3Rha2luZ190b2tlbhgPIAEoCRI3",
            "ChNsYXN0X29wZXJhdGlvbl90aW1lGBAgASgLMhouZ29vZ2xlLnByb3RvYnVm",
            "LlRpbWVzdGFtcCJdCg9FYXJseVN0YWtlSW5wdXQSGwoHcG9vbF9pZBgBIAEo",
            "CzIKLmFlbGYuSGFzaBIOCgZwZXJpb2QYAiABKAMSHQoJY2xhaW1faWRzGAMg",
            "AygLMgouYWVsZi5IYXNoIp4DCglDbGFpbUluZm8SHAoIY2xhaW1faWQYASAB",
            "KAsyCi5hZWxmLkhhc2gSGwoHcG9vbF9pZBgCIAEoCzIKLmFlbGYuSGFzaBIW",
            "Cg5jbGFpbWVkX2Ftb3VudBgDIAEoAxIWCg5jbGFpbWVkX3N5bWJvbBgEIAEo",
            "CRIcChRjbGFpbWVkX2Jsb2NrX251bWJlchgFIAEoAxIwCgxjbGFpbWVkX3Rp",
            "bWUYBiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEi8KC3VubG9j",
            "a190aW1lGAcgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIxCg13",
            "aXRoZHJhd190aW1lGAggASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFt",
            "cBIeCgdhY2NvdW50GAkgASgLMg0uYWVsZi5BZGRyZXNzEjQKEGVhcmx5X3N0",
            "YWtlX3RpbWUYCiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEhwK",
            "CHN0YWtlX2lkGAsgASgLMgouYWVsZi5IYXNoIiYKCkNsYWltSW5mb3MSGAoE",
            "ZGF0YRgBIAMoCzIKLkNsYWltSW5mbyKRAQoNU3Rha2VGb3JJbnB1dBIbCgdw",
            "b29sX2lkGAEgASgLMgouYWVsZi5IYXNoEg4KBmFtb3VudBgCIAEoAxIOCgZw",
            "ZXJpb2QYAyABKAMSHgoHYWRkcmVzcxgEIAEoCzINLmFlbGYuQWRkcmVzcxIj",
            "Cgxmcm9tX2FkZHJlc3MYBSABKAsyDS5hZWxmLkFkZHJlc3MibwoPR2V0UmV3",
            "YXJkT3V0cHV0EhwKCHN0YWtlX2lkGAEgASgLMgouYWVsZi5IYXNoEh4KB2Fj",
            "Y291bnQYAiABKAsyDS5hZWxmLkFkZHJlc3MSDgoGc3ltYm9sGAMgASgJEg4K",
            "BmFtb3VudBgEIAEoAyIuCg1XaXRoZHJhd0lucHV0Eh0KCWNsYWltX2lkcxgB",
            "IAMoCzIKLmFlbGYuSGFzaCJhChFSZWNvdmVyVG9rZW5JbnB1dBIbCgdwb29s",
            "X2lkGAEgASgLMgouYWVsZi5IYXNoEg0KBXRva2VuGAIgASgJEiAKCXJlY2lw",
            "aWVudBgDIAEoCzINLmFlbGYuQWRkcmVzcyI1ChRVcGRhdGVTdGFrZUluZm9J",
            "bnB1dBIdCglzdGFrZV9pZHMYASADKAsyCi5hZWxmLkhhc2giJAoISGFzaExp",
            "c3QSGAoEZGF0YRgBIAMoCzIKLmFlbGYuSGFzaCIkCglQb29sRGF0YXMSFwoE",
            "ZGF0YRgBIAMoCzIJLlBvb2xEYXRhIroBCg9Jbml0aWFsaXplSW5wdXQSHAoF",
            "YWRtaW4YASABKAsyDS5hZWxmLkFkZHJlc3MSLgoXZWNvZWFybl9wb2ludHNf",
            "Y29udHJhY3QYAiABKAsyDS5hZWxmLkFkZHJlc3MSFwoPY29tbWlzc2lvbl9y",
            "YXRlGAMgASgDEiAKCXJlY2lwaWVudBgEIAEoCzINLmFlbGYuQWRkcmVzcxIe",
            "ChZpc19yZWdpc3Rlcl9yZXN0cmljdGVkGAUgASgIImMKBkNvbmZpZxIXCg9j",
            "b21taXNzaW9uX3JhdGUYASABKAMSIAoJcmVjaXBpZW50GAIgASgLMg0uYWVs",
            "Zi5BZGRyZXNzEh4KFmlzX3JlZ2lzdGVyX3Jlc3RyaWN0ZWQYAyABKAgiTgoR",
            "U2V0RGFwcEFkbWluSW5wdXQSGwoHZGFwcF9pZBgBIAEoCzIKLmFlbGYuSGFz",
            "aBIcCgVhZG1pbhgCIAEoCzINLmFlbGYuQWRkcmVzcyJSChNHZXRVc2VyU3Rh",
            "a2VJZElucHV0EhsKB3Bvb2xfaWQYASABKAsyCi5hZWxmLkhhc2gSHgoHYWNj",
            "b3VudBgCIAEoCzINLmFlbGYuQWRkcmVzcyJVChZHZXRVc2VyU3Rha2VDb3Vu",
            "dElucHV0EhsKB3Bvb2xfaWQYASABKAsyCi5hZWxmLkhhc2gSHgoHYWNjb3Vu",
            "dBgCIAEoCzINLmFlbGYuQWRkcmVzcyJmCg5FYXJseVN0YWtlSW5mbxInCgRk",
            "YXRhGAEgAygLMhkuRWFybHlTdGFrZUluZm8uRGF0YUVudHJ5GisKCURhdGFF",
            "bnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAM6AjgBIl4KD1Bvb2xB",
            "ZGRyZXNzSW5mbxIkCg1zdGFrZV9hZGRyZXNzGAEgASgLMg0uYWVsZi5BZGRy",
            "ZXNzEiUKDnJld2FyZF9hZGRyZXNzGAIgASgLMg0uYWVsZi5BZGRyZXNzIk0K",
            "ClJlZ2lzdGVyZWQSGwoHZGFwcF9pZBgBIAEoCzIKLmFlbGYuSGFzaBIcCgVh",
            "ZG1pbhgCIAEoCzINLmFlbGYuQWRkcmVzczoEoLsYASKuAQoRVG9rZW5zUG9v",
            "bENyZWF0ZWQSGwoHZGFwcF9pZBgBIAEoCzIKLmFlbGYuSGFzaBIhCgZjb25m",
            "aWcYAiABKAsyES5Ub2tlbnNQb29sQ29uZmlnEhsKB3Bvb2xfaWQYAyABKAsy",
            "Ci5hZWxmLkhhc2gSDgoGYW1vdW50GAQgASgDEiYKDGFkZHJlc3NfaW5mbxgF",
            "IAEoCzIQLlBvb2xBZGRyZXNzSW5mbzoEoLsYASJ3ChRUb2tlbnNQb29sRW5k",
            "VGltZVNldBIbCgdwb29sX2lkGAEgASgLMgouYWVsZi5IYXNoEiwKCGVuZF90",
            "aW1lGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIOCgZhbW91",
            "bnQYAyABKAM6BKC7GAEiZgoaVG9rZW5zUG9vbFVwZGF0ZUFkZHJlc3NTZXQS",
            "GwoHcG9vbF9pZBgBIAEoCzIKLmFlbGYuSGFzaBIlCg51cGRhdGVfYWRkcmVz",
            "cxgCIAEoCzINLmFlbGYuQWRkcmVzczoEoLsYASJdCiBUb2tlbnNQb29sUmV3",
            "YXJkUmVsZWFzZVBlcmlvZFNldBIbCgdwb29sX2lkGAEgASgLMgouYWVsZi5I",
            "YXNoEhYKDnJlbGVhc2VfcGVyaW9kGAIgASgDOgSguxgBIrMBChhUb2tlbnNQ",
            "b29sU3Rha2VDb25maWdTZXQSGwoHcG9vbF9pZBgBIAEoCzIKLmFlbGYuSGFz",
            "aBIWCg5taW5pbXVtX2Ftb3VudBgCIAEoAxIeChZtYXhpbXVtX3N0YWtlX2R1",
            "cmF0aW9uGAMgASgDEhwKFG1pbmltdW1fY2xhaW1fYW1vdW50GAQgASgDEh4K",
            "Fm1pbmltdW1fc3Rha2VfZHVyYXRpb24YBSABKAM6BKC7GAEiTAoGU3Rha2Vk",
            "Eh4KCnN0YWtlX2luZm8YASABKAsyCi5TdGFrZUluZm8SHAoJcG9vbF9kYXRh",
            "GAIgASgLMgkuUG9vbERhdGE6BKC7GAEikAEKC0Vhcmx5U3Rha2VkEhsKB3Bv",
            "b2xfaWQYASABKAsyCi5hZWxmLkhhc2gSHgoKc3Rha2VfaW5mbxgCIAEoCzIK",
            "LlN0YWtlSW5mbxIcCglwb29sX2RhdGEYAyABKAsyCS5Qb29sRGF0YRIgCgtj",
            "bGFpbV9pbmZvcxgEIAEoCzILLkNsYWltSW5mb3M6BKC7GAEigAEKCFVubG9j",
            "a2VkEhwKCHN0YWtlX2lkGAEgASgLMgouYWVsZi5IYXNoEhUKDXN0YWtlZF9h",
            "bW91bnQYAiABKAMSGwoTZWFybHlfc3Rha2VkX2Ftb3VudBgDIAEoAxIcCglw",
            "b29sX2RhdGEYBCABKAsyCS5Qb29sRGF0YToEoLsYASJNCgdDbGFpbWVkEhwK",
            "CHN0YWtlX2lkGAEgASgLMgouYWVsZi5IYXNoEh4KCmNsYWltX2luZm8YAiAB",
            "KAsyCi5DbGFpbUluZm86BKC7GAEiMwoJV2l0aGRyYXduEiAKC2NsYWltX2lu",
            "Zm9zGAEgASgLMgsuQ2xhaW1JbmZvczoEoLsYASJyCg5Ub2tlblJlY292ZXJl",
            "ZBIbCgdwb29sX2lkGAEgASgLMgouYWVsZi5IYXNoEg0KBXRva2VuGAIgASgJ",
            "Eg4KBmFtb3VudBgDIAEoAxIeCgdhY2NvdW50GAQgASgLMg0uYWVsZi5BZGRy",
            "ZXNzOgSguxgBIlYKEFN0YWtlSW5mb1VwZGF0ZWQSHAoJc3Rha2VfaWRzGAEg",
            "ASgLMgkuSGFzaExpc3QSHgoKcG9vbF9kYXRhcxgCIAEoCzIKLlBvb2xEYXRh",
            "czoEoLsYASIqCglDb25maWdTZXQSFwoGY29uZmlnGAEgASgLMgcuQ29uZmln",
            "OgSguxgBIi4KCEFkbWluU2V0EhwKBWFkbWluGAEgASgLMg0uYWVsZi5BZGRy",
            "ZXNzOgSguxgBIk8KDERhcHBBZG1pblNldBIbCgdkYXBwX2lkGAEgASgLMgou",
            "YWVsZi5IYXNoEhwKBWFkbWluGAIgASgLMg0uYWVsZi5BZGRyZXNzOgSguxgB",
            "Il4KHVRva2Vuc1Bvb2xGaXhlZEJvb3N0RmFjdG9yU2V0EhsKB3Bvb2xfaWQY",
            "ASABKAsyCi5hZWxmLkhhc2gSGgoSZml4ZWRfYm9vc3RfZmFjdG9yGAIgASgD",
            "OgSguxgBInoKHFRva2Vuc1Bvb2xSZXdhcmRQZXJTZWNvbmRTZXQSGwoHcG9v",
            "bF9pZBgBIAEoCzIKLmFlbGYuSGFzaBIZChFyZXdhcmRfcGVyX3NlY29uZBgC",
            "IAEoAxIcCglwb29sX2RhdGEYAyABKAsyCS5Qb29sRGF0YToEoLsYATKqEAoV",
            "RWNvRWFyblRva2Vuc0NvbnRyYWN0EjQKCFJlZ2lzdGVyEg4uUmVnaXN0ZXJJ",
            "bnB1dBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIAEjwKDFNldERhcHBBZG1p",
            "bhISLlNldERhcHBBZG1pbklucHV0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5",
            "IgASKwoLR2V0RGFwcEluZm8SCi5hZWxmLkhhc2gaCS5EYXBwSW5mbyIFiIn3",
            "AQESRAoQQ3JlYXRlVG9rZW5zUG9vbBIWLkNyZWF0ZVRva2Vuc1Bvb2xJbnB1",
            "dBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIAEkwKFFNldFRva2Vuc1Bvb2xF",
            "bmRUaW1lEhouU2V0VG9rZW5zUG9vbEVuZFRpbWVJbnB1dBoWLmdvb2dsZS5w",
            "cm90b2J1Zi5FbXB0eSIAElgKGlNldFRva2Vuc1Bvb2xVcGRhdGVBZGRyZXNz",
            "EiAuU2V0VG9rZW5zUG9vbFVwZGF0ZUFkZHJlc3NJbnB1dBoWLmdvb2dsZS5w",
            "cm90b2J1Zi5FbXB0eSIAEmQKIFNldFRva2Vuc1Bvb2xSZXdhcmRSZWxlYXNl",
            "UGVyaW9kEiYuU2V0VG9rZW5zUG9vbFJld2FyZFJlbGVhc2VQZXJpb2RJbnB1",
            "dBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIAElQKGFNldFRva2Vuc1Bvb2xT",
            "dGFrZUNvbmZpZxIeLlNldFRva2Vuc1Bvb2xTdGFrZUNvbmZpZ0lucHV0GhYu",
            "Z29vZ2xlLnByb3RvYnVmLkVtcHR5IgASNAoLR2V0UG9vbEluZm8SCi5hZWxm",
            "Lkhhc2gaEi5HZXRQb29sSW5mb091dHB1dCIFiIn3AQESKwoLR2V0UG9vbERh",
            "dGESCi5hZWxmLkhhc2gaCS5Qb29sRGF0YSIFiIn3AQESOQoSR2V0UG9vbEFk",
            "ZHJlc3NJbmZvEgouYWVsZi5IYXNoGhAuUG9vbEFkZHJlc3NJbmZvIgWIifcB",
            "ARI+CgxHZXRQb29sQ291bnQSCi5hZWxmLkhhc2gaGy5nb29nbGUucHJvdG9i",
            "dWYuSW50NjRWYWx1ZSIFiIn3AQESXgodU2V0VG9rZW5zUG9vbEZpeGVkQm9v",
            "c3RGYWN0b3ISIy5TZXRUb2tlbnNQb29sRml4ZWRCb29zdEZhY3RvcklucHV0",
            "GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IgASXAocU2V0VG9rZW5zUG9vbFJl",
            "d2FyZFBlclNlY29uZBIiLlNldFRva2Vuc1Bvb2xSZXdhcmRQZXJTZWNvbmRJ",
            "bnB1dBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIAEi4KBVN0YWtlEgsuU3Rh",
            "a2VJbnB1dBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIAEjgKCkVhcmx5U3Rh",
            "a2USEC5FYXJseVN0YWtlSW5wdXQaFi5nb29nbGUucHJvdG9idWYuRW1wdHki",
            "ABI0CghTdGFrZUZvchIOLlN0YWtlRm9ySW5wdXQaFi5nb29nbGUucHJvdG9i",
            "dWYuRW1wdHkiABItCgxHZXRTdGFrZUluZm8SCi5hZWxmLkhhc2gaCi5TdGFr",
            "ZUluZm8iBYiJ9wEBEjAKCUdldFJld2FyZBIKLmFlbGYuSGFzaBoQLkdldFJl",
            "d2FyZE91dHB1dCIFiIn3AQESLgoGVW5sb2NrEgouYWVsZi5IYXNoGhYuZ29v",
            "Z2xlLnByb3RvYnVmLkVtcHR5IgASOQoOR2V0VXNlclN0YWtlSWQSFC5HZXRV",
            "c2VyU3Rha2VJZElucHV0GgouYWVsZi5IYXNoIgWIifcBARJQChFHZXRVc2Vy",
            "U3Rha2VDb3VudBIXLkdldFVzZXJTdGFrZUNvdW50SW5wdXQaGy5nb29nbGUu",
            "cHJvdG9idWYuSW50NjRWYWx1ZSIFiIn3AQESLQoFQ2xhaW0SCi5hZWxmLkhh",
            "c2gaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiABItCgxHZXRDbGFpbUluZm8S",
            "Ci5hZWxmLkhhc2gaCi5DbGFpbUluZm8iBYiJ9wEBEjQKCFdpdGhkcmF3Eg4u",
            "V2l0aGRyYXdJbnB1dBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIAEjwKDFJl",
            "Y292ZXJUb2tlbhISLlJlY292ZXJUb2tlbklucHV0GhYuZ29vZ2xlLnByb3Rv",
            "YnVmLkVtcHR5IgASQgoPVXBkYXRlU3Rha2VJbmZvEhUuVXBkYXRlU3Rha2VJ",
            "bmZvSW5wdXQaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiABI4CgpJbml0aWFs",
            "aXplEhAuSW5pdGlhbGl6ZUlucHV0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5",
            "IgASLgoJU2V0Q29uZmlnEgcuQ29uZmlnGhYuZ29vZ2xlLnByb3RvYnVmLkVt",
            "cHR5IgASMwoJR2V0Q29uZmlnEhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5Ggcu",
            "Q29uZmlnIgWIifcBARIzCghTZXRBZG1pbhINLmFlbGYuQWRkcmVzcxoWLmdv",
            "b2dsZS5wcm90b2J1Zi5FbXB0eSIAEjgKCEdldEFkbWluEhYuZ29vZ2xlLnBy",
            "b3RvYnVmLkVtcHR5Gg0uYWVsZi5BZGRyZXNzIgWIifcBARpIysr2AQthY3Mx",
            "Mi5wcm90b7LM9gEzRWNvRWFybi5Db250cmFjdHMuVG9rZW5zLkVjb0Vhcm5U",
            "b2tlbnNDb250cmFjdFN0YXRlQhuqAhhFY29FYXJuLkNvbnRyYWN0cy5Ub2tl",
            "bnNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::AElf.Types.CoreReflection.Descriptor, global::AElf.OptionsReflection.Descriptor, global::AElf.Standards.ACS12.Acs12Reflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.RegisterInput), global::EcoEarn.Contracts.Tokens.RegisterInput.Parser, new[]{ "DappId", "Admin" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.DappInfo), global::EcoEarn.Contracts.Tokens.DappInfo.Parser, new[]{ "DappId", "Admin" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.CreateTokensPoolInput), global::EcoEarn.Contracts.Tokens.CreateTokensPoolInput.Parser, new[]{ "DappId", "RewardToken", "StartTime", "EndTime", "RewardPerSecond", "UpdateAddress", "StakingToken", "FixedBoostFactor", "MinimumAmount", "ReleasePeriod", "MaximumStakeDuration", "RewardTokenContract", "StakeTokenContract", "MinimumClaimAmount", "MinimumStakeDuration" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.TokensPoolConfig), global::EcoEarn.Contracts.Tokens.TokensPoolConfig.Parser, new[]{ "RewardToken", "StartTime", "EndTime", "RewardPerSecond", "UpdateAddress", "StakingToken", "FixedBoostFactor", "MinimumAmount", "ReleasePeriod", "MaximumStakeDuration", "RewardTokenContract", "StakeTokenContract", "MinimumClaimAmount", "MinimumStakeDuration" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.SetTokensPoolEndTimeInput), global::EcoEarn.Contracts.Tokens.SetTokensPoolEndTimeInput.Parser, new[]{ "PoolId", "EndTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.SetTokensPoolUpdateAddressInput), global::EcoEarn.Contracts.Tokens.SetTokensPoolUpdateAddressInput.Parser, new[]{ "PoolId", "UpdateAddress" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.SetTokensPoolRewardReleasePeriodInput), global::EcoEarn.Contracts.Tokens.SetTokensPoolRewardReleasePeriodInput.Parser, new[]{ "PoolId", "ReleasePeriod" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.SetTokensPoolStakeConfigInput), global::EcoEarn.Contracts.Tokens.SetTokensPoolStakeConfigInput.Parser, new[]{ "PoolId", "MinimumAmount", "MaximumStakeDuration", "MinimumClaimAmount", "MinimumStakeDuration" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.SetTokensPoolFixedBoostFactorInput), global::EcoEarn.Contracts.Tokens.SetTokensPoolFixedBoostFactorInput.Parser, new[]{ "PoolId", "FixedBoostFactor" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.SetTokensPoolRewardPerSecondInput), global::EcoEarn.Contracts.Tokens.SetTokensPoolRewardPerSecondInput.Parser, new[]{ "PoolId", "RewardPerSecond" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.GetPoolInfoOutput), global::EcoEarn.Contracts.Tokens.GetPoolInfoOutput.Parser, new[]{ "PoolInfo", "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.PoolInfo), global::EcoEarn.Contracts.Tokens.PoolInfo.Parser, new[]{ "DappId", "PoolId", "Config", "PrecisionFactor" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.PoolData), global::EcoEarn.Contracts.Tokens.PoolData.Parser, new[]{ "PoolId", "AccTokenPerShare", "LastRewardSecond", "TotalStakedAmount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.StakeInput), global::EcoEarn.Contracts.Tokens.StakeInput.Parser, new[]{ "PoolId", "Amount", "Period" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.StakeInfo), global::EcoEarn.Contracts.Tokens.StakeInfo.Parser, new[]{ "StakeId", "PoolId", "StakedAmount", "EarlyStakedAmount", "StakedBlockNumber", "StakedTime", "Period", "Account", "BoostedAmount", "RewardDebt", "UnlockTime", "RewardAmount", "LockedRewardAmount", "ClaimedAmount", "StakingToken", "LastOperationTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.EarlyStakeInput), global::EcoEarn.Contracts.Tokens.EarlyStakeInput.Parser, new[]{ "PoolId", "Period", "ClaimIds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.ClaimInfo), global::EcoEarn.Contracts.Tokens.ClaimInfo.Parser, new[]{ "ClaimId", "PoolId", "ClaimedAmount", "ClaimedSymbol", "ClaimedBlockNumber", "ClaimedTime", "UnlockTime", "WithdrawTime", "Account", "EarlyStakeTime", "StakeId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.ClaimInfos), global::EcoEarn.Contracts.Tokens.ClaimInfos.Parser, new[]{ "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.StakeForInput), global::EcoEarn.Contracts.Tokens.StakeForInput.Parser, new[]{ "PoolId", "Amount", "Period", "Address", "FromAddress" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.GetRewardOutput), global::EcoEarn.Contracts.Tokens.GetRewardOutput.Parser, new[]{ "StakeId", "Account", "Symbol", "Amount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.WithdrawInput), global::EcoEarn.Contracts.Tokens.WithdrawInput.Parser, new[]{ "ClaimIds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.RecoverTokenInput), global::EcoEarn.Contracts.Tokens.RecoverTokenInput.Parser, new[]{ "PoolId", "Token", "Recipient" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.UpdateStakeInfoInput), global::EcoEarn.Contracts.Tokens.UpdateStakeInfoInput.Parser, new[]{ "StakeIds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.HashList), global::EcoEarn.Contracts.Tokens.HashList.Parser, new[]{ "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.PoolDatas), global::EcoEarn.Contracts.Tokens.PoolDatas.Parser, new[]{ "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.InitializeInput), global::EcoEarn.Contracts.Tokens.InitializeInput.Parser, new[]{ "Admin", "EcoearnPointsContract", "CommissionRate", "Recipient", "IsRegisterRestricted" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.Config), global::EcoEarn.Contracts.Tokens.Config.Parser, new[]{ "CommissionRate", "Recipient", "IsRegisterRestricted" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.SetDappAdminInput), global::EcoEarn.Contracts.Tokens.SetDappAdminInput.Parser, new[]{ "DappId", "Admin" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.GetUserStakeIdInput), global::EcoEarn.Contracts.Tokens.GetUserStakeIdInput.Parser, new[]{ "PoolId", "Account" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.GetUserStakeCountInput), global::EcoEarn.Contracts.Tokens.GetUserStakeCountInput.Parser, new[]{ "PoolId", "Account" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.EarlyStakeInfo), global::EcoEarn.Contracts.Tokens.EarlyStakeInfo.Parser, new[]{ "Data" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.PoolAddressInfo), global::EcoEarn.Contracts.Tokens.PoolAddressInfo.Parser, new[]{ "StakeAddress", "RewardAddress" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.Registered), global::EcoEarn.Contracts.Tokens.Registered.Parser, new[]{ "DappId", "Admin" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.TokensPoolCreated), global::EcoEarn.Contracts.Tokens.TokensPoolCreated.Parser, new[]{ "DappId", "Config", "PoolId", "Amount", "AddressInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.TokensPoolEndTimeSet), global::EcoEarn.Contracts.Tokens.TokensPoolEndTimeSet.Parser, new[]{ "PoolId", "EndTime", "Amount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.TokensPoolUpdateAddressSet), global::EcoEarn.Contracts.Tokens.TokensPoolUpdateAddressSet.Parser, new[]{ "PoolId", "UpdateAddress" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.TokensPoolRewardReleasePeriodSet), global::EcoEarn.Contracts.Tokens.TokensPoolRewardReleasePeriodSet.Parser, new[]{ "PoolId", "ReleasePeriod" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.TokensPoolStakeConfigSet), global::EcoEarn.Contracts.Tokens.TokensPoolStakeConfigSet.Parser, new[]{ "PoolId", "MinimumAmount", "MaximumStakeDuration", "MinimumClaimAmount", "MinimumStakeDuration" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.Staked), global::EcoEarn.Contracts.Tokens.Staked.Parser, new[]{ "StakeInfo", "PoolData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.EarlyStaked), global::EcoEarn.Contracts.Tokens.EarlyStaked.Parser, new[]{ "PoolId", "StakeInfo", "PoolData", "ClaimInfos" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.Unlocked), global::EcoEarn.Contracts.Tokens.Unlocked.Parser, new[]{ "StakeId", "StakedAmount", "EarlyStakedAmount", "PoolData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.Claimed), global::EcoEarn.Contracts.Tokens.Claimed.Parser, new[]{ "StakeId", "ClaimInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.Withdrawn), global::EcoEarn.Contracts.Tokens.Withdrawn.Parser, new[]{ "ClaimInfos" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.TokenRecovered), global::EcoEarn.Contracts.Tokens.TokenRecovered.Parser, new[]{ "PoolId", "Token", "Amount", "Account" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.StakeInfoUpdated), global::EcoEarn.Contracts.Tokens.StakeInfoUpdated.Parser, new[]{ "StakeIds", "PoolDatas" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.ConfigSet), global::EcoEarn.Contracts.Tokens.ConfigSet.Parser, new[]{ "Config" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.AdminSet), global::EcoEarn.Contracts.Tokens.AdminSet.Parser, new[]{ "Admin" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.DappAdminSet), global::EcoEarn.Contracts.Tokens.DappAdminSet.Parser, new[]{ "DappId", "Admin" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.TokensPoolFixedBoostFactorSet), global::EcoEarn.Contracts.Tokens.TokensPoolFixedBoostFactorSet.Parser, new[]{ "PoolId", "FixedBoostFactor" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::EcoEarn.Contracts.Tokens.TokensPoolRewardPerSecondSet), global::EcoEarn.Contracts.Tokens.TokensPoolRewardPerSecondSet.Parser, new[]{ "PoolId", "RewardPerSecond", "PoolData" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class RegisterInput : pb::IMessage<RegisterInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegisterInput> _parser = new pb::MessageParser<RegisterInput>(() => new RegisterInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RegisterInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterInput(RegisterInput other) : this() {
      dappId_ = other.dappId_ != null ? other.dappId_.Clone() : null;
      admin_ = other.admin_ != null ? other.admin_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterInput Clone() {
      return new RegisterInput(this);
    }

    /// <summary>Field number for the "dapp_id" field.</summary>
    public const int DappIdFieldNumber = 1;
    private global::AElf.Types.Hash dappId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash DappId {
      get { return dappId_; }
      set {
        dappId_ = value;
      }
    }

    /// <summary>Field number for the "admin" field.</summary>
    public const int AdminFieldNumber = 2;
    private global::AElf.Types.Address admin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address Admin {
      get { return admin_; }
      set {
        admin_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RegisterInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RegisterInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DappId, other.DappId)) return false;
      if (!object.Equals(Admin, other.Admin)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (dappId_ != null) hash ^= DappId.GetHashCode();
      if (admin_ != null) hash ^= Admin.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (dappId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DappId);
      }
      if (admin_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Admin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (dappId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DappId);
      }
      if (admin_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Admin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (dappId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DappId);
      }
      if (admin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Admin);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RegisterInput other) {
      if (other == null) {
        return;
      }
      if (other.dappId_ != null) {
        if (dappId_ == null) {
          DappId = new global::AElf.Types.Hash();
        }
        DappId.MergeFrom(other.DappId);
      }
      if (other.admin_ != null) {
        if (admin_ == null) {
          Admin = new global::AElf.Types.Address();
        }
        Admin.MergeFrom(other.Admin);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (dappId_ == null) {
              DappId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(DappId);
            break;
          }
          case 18: {
            if (admin_ == null) {
              Admin = new global::AElf.Types.Address();
            }
            input.ReadMessage(Admin);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (dappId_ == null) {
              DappId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(DappId);
            break;
          }
          case 18: {
            if (admin_ == null) {
              Admin = new global::AElf.Types.Address();
            }
            input.ReadMessage(Admin);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DappInfo : pb::IMessage<DappInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DappInfo> _parser = new pb::MessageParser<DappInfo>(() => new DappInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DappInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DappInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DappInfo(DappInfo other) : this() {
      dappId_ = other.dappId_ != null ? other.dappId_.Clone() : null;
      admin_ = other.admin_ != null ? other.admin_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DappInfo Clone() {
      return new DappInfo(this);
    }

    /// <summary>Field number for the "dapp_id" field.</summary>
    public const int DappIdFieldNumber = 1;
    private global::AElf.Types.Hash dappId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash DappId {
      get { return dappId_; }
      set {
        dappId_ = value;
      }
    }

    /// <summary>Field number for the "admin" field.</summary>
    public const int AdminFieldNumber = 2;
    private global::AElf.Types.Address admin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address Admin {
      get { return admin_; }
      set {
        admin_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DappInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DappInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DappId, other.DappId)) return false;
      if (!object.Equals(Admin, other.Admin)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (dappId_ != null) hash ^= DappId.GetHashCode();
      if (admin_ != null) hash ^= Admin.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (dappId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DappId);
      }
      if (admin_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Admin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (dappId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DappId);
      }
      if (admin_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Admin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (dappId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DappId);
      }
      if (admin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Admin);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DappInfo other) {
      if (other == null) {
        return;
      }
      if (other.dappId_ != null) {
        if (dappId_ == null) {
          DappId = new global::AElf.Types.Hash();
        }
        DappId.MergeFrom(other.DappId);
      }
      if (other.admin_ != null) {
        if (admin_ == null) {
          Admin = new global::AElf.Types.Address();
        }
        Admin.MergeFrom(other.Admin);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (dappId_ == null) {
              DappId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(DappId);
            break;
          }
          case 18: {
            if (admin_ == null) {
              Admin = new global::AElf.Types.Address();
            }
            input.ReadMessage(Admin);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (dappId_ == null) {
              DappId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(DappId);
            break;
          }
          case 18: {
            if (admin_ == null) {
              Admin = new global::AElf.Types.Address();
            }
            input.ReadMessage(Admin);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CreateTokensPoolInput : pb::IMessage<CreateTokensPoolInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateTokensPoolInput> _parser = new pb::MessageParser<CreateTokensPoolInput>(() => new CreateTokensPoolInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateTokensPoolInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateTokensPoolInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateTokensPoolInput(CreateTokensPoolInput other) : this() {
      dappId_ = other.dappId_ != null ? other.dappId_.Clone() : null;
      rewardToken_ = other.rewardToken_;
      startTime_ = other.startTime_;
      endTime_ = other.endTime_;
      rewardPerSecond_ = other.rewardPerSecond_;
      updateAddress_ = other.updateAddress_ != null ? other.updateAddress_.Clone() : null;
      stakingToken_ = other.stakingToken_;
      fixedBoostFactor_ = other.fixedBoostFactor_;
      minimumAmount_ = other.minimumAmount_;
      releasePeriod_ = other.releasePeriod_;
      maximumStakeDuration_ = other.maximumStakeDuration_;
      rewardTokenContract_ = other.rewardTokenContract_ != null ? other.rewardTokenContract_.Clone() : null;
      stakeTokenContract_ = other.stakeTokenContract_ != null ? other.stakeTokenContract_.Clone() : null;
      minimumClaimAmount_ = other.minimumClaimAmount_;
      minimumStakeDuration_ = other.minimumStakeDuration_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateTokensPoolInput Clone() {
      return new CreateTokensPoolInput(this);
    }

    /// <summary>Field number for the "dapp_id" field.</summary>
    public const int DappIdFieldNumber = 1;
    private global::AElf.Types.Hash dappId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash DappId {
      get { return dappId_; }
      set {
        dappId_ = value;
      }
    }

    /// <summary>Field number for the "reward_token" field.</summary>
    public const int RewardTokenFieldNumber = 2;
    private string rewardToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RewardToken {
      get { return rewardToken_; }
      set {
        rewardToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 3;
    private long startTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 4;
    private long endTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    /// <summary>Field number for the "reward_per_second" field.</summary>
    public const int RewardPerSecondFieldNumber = 5;
    private long rewardPerSecond_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RewardPerSecond {
      get { return rewardPerSecond_; }
      set {
        rewardPerSecond_ = value;
      }
    }

    /// <summary>Field number for the "update_address" field.</summary>
    public const int UpdateAddressFieldNumber = 6;
    private global::AElf.Types.Address updateAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address UpdateAddress {
      get { return updateAddress_; }
      set {
        updateAddress_ = value;
      }
    }

    /// <summary>Field number for the "staking_token" field.</summary>
    public const int StakingTokenFieldNumber = 7;
    private string stakingToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StakingToken {
      get { return stakingToken_; }
      set {
        stakingToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fixed_boost_factor" field.</summary>
    public const int FixedBoostFactorFieldNumber = 8;
    private long fixedBoostFactor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long FixedBoostFactor {
      get { return fixedBoostFactor_; }
      set {
        fixedBoostFactor_ = value;
      }
    }

    /// <summary>Field number for the "minimum_amount" field.</summary>
    public const int MinimumAmountFieldNumber = 9;
    private long minimumAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MinimumAmount {
      get { return minimumAmount_; }
      set {
        minimumAmount_ = value;
      }
    }

    /// <summary>Field number for the "release_period" field.</summary>
    public const int ReleasePeriodFieldNumber = 10;
    private long releasePeriod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ReleasePeriod {
      get { return releasePeriod_; }
      set {
        releasePeriod_ = value;
      }
    }

    /// <summary>Field number for the "maximum_stake_duration" field.</summary>
    public const int MaximumStakeDurationFieldNumber = 11;
    private long maximumStakeDuration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MaximumStakeDuration {
      get { return maximumStakeDuration_; }
      set {
        maximumStakeDuration_ = value;
      }
    }

    /// <summary>Field number for the "reward_token_contract" field.</summary>
    public const int RewardTokenContractFieldNumber = 12;
    private global::AElf.Types.Address rewardTokenContract_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address RewardTokenContract {
      get { return rewardTokenContract_; }
      set {
        rewardTokenContract_ = value;
      }
    }

    /// <summary>Field number for the "stake_token_contract" field.</summary>
    public const int StakeTokenContractFieldNumber = 13;
    private global::AElf.Types.Address stakeTokenContract_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address StakeTokenContract {
      get { return stakeTokenContract_; }
      set {
        stakeTokenContract_ = value;
      }
    }

    /// <summary>Field number for the "minimum_claim_amount" field.</summary>
    public const int MinimumClaimAmountFieldNumber = 14;
    private long minimumClaimAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MinimumClaimAmount {
      get { return minimumClaimAmount_; }
      set {
        minimumClaimAmount_ = value;
      }
    }

    /// <summary>Field number for the "minimum_stake_duration" field.</summary>
    public const int MinimumStakeDurationFieldNumber = 15;
    private long minimumStakeDuration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MinimumStakeDuration {
      get { return minimumStakeDuration_; }
      set {
        minimumStakeDuration_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateTokensPoolInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateTokensPoolInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DappId, other.DappId)) return false;
      if (RewardToken != other.RewardToken) return false;
      if (StartTime != other.StartTime) return false;
      if (EndTime != other.EndTime) return false;
      if (RewardPerSecond != other.RewardPerSecond) return false;
      if (!object.Equals(UpdateAddress, other.UpdateAddress)) return false;
      if (StakingToken != other.StakingToken) return false;
      if (FixedBoostFactor != other.FixedBoostFactor) return false;
      if (MinimumAmount != other.MinimumAmount) return false;
      if (ReleasePeriod != other.ReleasePeriod) return false;
      if (MaximumStakeDuration != other.MaximumStakeDuration) return false;
      if (!object.Equals(RewardTokenContract, other.RewardTokenContract)) return false;
      if (!object.Equals(StakeTokenContract, other.StakeTokenContract)) return false;
      if (MinimumClaimAmount != other.MinimumClaimAmount) return false;
      if (MinimumStakeDuration != other.MinimumStakeDuration) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (dappId_ != null) hash ^= DappId.GetHashCode();
      if (RewardToken.Length != 0) hash ^= RewardToken.GetHashCode();
      if (StartTime != 0L) hash ^= StartTime.GetHashCode();
      if (EndTime != 0L) hash ^= EndTime.GetHashCode();
      if (RewardPerSecond != 0L) hash ^= RewardPerSecond.GetHashCode();
      if (updateAddress_ != null) hash ^= UpdateAddress.GetHashCode();
      if (StakingToken.Length != 0) hash ^= StakingToken.GetHashCode();
      if (FixedBoostFactor != 0L) hash ^= FixedBoostFactor.GetHashCode();
      if (MinimumAmount != 0L) hash ^= MinimumAmount.GetHashCode();
      if (ReleasePeriod != 0L) hash ^= ReleasePeriod.GetHashCode();
      if (MaximumStakeDuration != 0L) hash ^= MaximumStakeDuration.GetHashCode();
      if (rewardTokenContract_ != null) hash ^= RewardTokenContract.GetHashCode();
      if (stakeTokenContract_ != null) hash ^= StakeTokenContract.GetHashCode();
      if (MinimumClaimAmount != 0L) hash ^= MinimumClaimAmount.GetHashCode();
      if (MinimumStakeDuration != 0L) hash ^= MinimumStakeDuration.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (dappId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DappId);
      }
      if (RewardToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RewardToken);
      }
      if (StartTime != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(StartTime);
      }
      if (EndTime != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(EndTime);
      }
      if (RewardPerSecond != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(RewardPerSecond);
      }
      if (updateAddress_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(UpdateAddress);
      }
      if (StakingToken.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(StakingToken);
      }
      if (FixedBoostFactor != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(FixedBoostFactor);
      }
      if (MinimumAmount != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(MinimumAmount);
      }
      if (ReleasePeriod != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(ReleasePeriod);
      }
      if (MaximumStakeDuration != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(MaximumStakeDuration);
      }
      if (rewardTokenContract_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(RewardTokenContract);
      }
      if (stakeTokenContract_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(StakeTokenContract);
      }
      if (MinimumClaimAmount != 0L) {
        output.WriteRawTag(112);
        output.WriteInt64(MinimumClaimAmount);
      }
      if (MinimumStakeDuration != 0L) {
        output.WriteRawTag(120);
        output.WriteInt64(MinimumStakeDuration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (dappId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DappId);
      }
      if (RewardToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RewardToken);
      }
      if (StartTime != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(StartTime);
      }
      if (EndTime != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(EndTime);
      }
      if (RewardPerSecond != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(RewardPerSecond);
      }
      if (updateAddress_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(UpdateAddress);
      }
      if (StakingToken.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(StakingToken);
      }
      if (FixedBoostFactor != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(FixedBoostFactor);
      }
      if (MinimumAmount != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(MinimumAmount);
      }
      if (ReleasePeriod != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(ReleasePeriod);
      }
      if (MaximumStakeDuration != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(MaximumStakeDuration);
      }
      if (rewardTokenContract_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(RewardTokenContract);
      }
      if (stakeTokenContract_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(StakeTokenContract);
      }
      if (MinimumClaimAmount != 0L) {
        output.WriteRawTag(112);
        output.WriteInt64(MinimumClaimAmount);
      }
      if (MinimumStakeDuration != 0L) {
        output.WriteRawTag(120);
        output.WriteInt64(MinimumStakeDuration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (dappId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DappId);
      }
      if (RewardToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RewardToken);
      }
      if (StartTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartTime);
      }
      if (EndTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndTime);
      }
      if (RewardPerSecond != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RewardPerSecond);
      }
      if (updateAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateAddress);
      }
      if (StakingToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StakingToken);
      }
      if (FixedBoostFactor != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FixedBoostFactor);
      }
      if (MinimumAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinimumAmount);
      }
      if (ReleasePeriod != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ReleasePeriod);
      }
      if (MaximumStakeDuration != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaximumStakeDuration);
      }
      if (rewardTokenContract_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RewardTokenContract);
      }
      if (stakeTokenContract_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StakeTokenContract);
      }
      if (MinimumClaimAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinimumClaimAmount);
      }
      if (MinimumStakeDuration != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinimumStakeDuration);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateTokensPoolInput other) {
      if (other == null) {
        return;
      }
      if (other.dappId_ != null) {
        if (dappId_ == null) {
          DappId = new global::AElf.Types.Hash();
        }
        DappId.MergeFrom(other.DappId);
      }
      if (other.RewardToken.Length != 0) {
        RewardToken = other.RewardToken;
      }
      if (other.StartTime != 0L) {
        StartTime = other.StartTime;
      }
      if (other.EndTime != 0L) {
        EndTime = other.EndTime;
      }
      if (other.RewardPerSecond != 0L) {
        RewardPerSecond = other.RewardPerSecond;
      }
      if (other.updateAddress_ != null) {
        if (updateAddress_ == null) {
          UpdateAddress = new global::AElf.Types.Address();
        }
        UpdateAddress.MergeFrom(other.UpdateAddress);
      }
      if (other.StakingToken.Length != 0) {
        StakingToken = other.StakingToken;
      }
      if (other.FixedBoostFactor != 0L) {
        FixedBoostFactor = other.FixedBoostFactor;
      }
      if (other.MinimumAmount != 0L) {
        MinimumAmount = other.MinimumAmount;
      }
      if (other.ReleasePeriod != 0L) {
        ReleasePeriod = other.ReleasePeriod;
      }
      if (other.MaximumStakeDuration != 0L) {
        MaximumStakeDuration = other.MaximumStakeDuration;
      }
      if (other.rewardTokenContract_ != null) {
        if (rewardTokenContract_ == null) {
          RewardTokenContract = new global::AElf.Types.Address();
        }
        RewardTokenContract.MergeFrom(other.RewardTokenContract);
      }
      if (other.stakeTokenContract_ != null) {
        if (stakeTokenContract_ == null) {
          StakeTokenContract = new global::AElf.Types.Address();
        }
        StakeTokenContract.MergeFrom(other.StakeTokenContract);
      }
      if (other.MinimumClaimAmount != 0L) {
        MinimumClaimAmount = other.MinimumClaimAmount;
      }
      if (other.MinimumStakeDuration != 0L) {
        MinimumStakeDuration = other.MinimumStakeDuration;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (dappId_ == null) {
              DappId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(DappId);
            break;
          }
          case 18: {
            RewardToken = input.ReadString();
            break;
          }
          case 24: {
            StartTime = input.ReadInt64();
            break;
          }
          case 32: {
            EndTime = input.ReadInt64();
            break;
          }
          case 40: {
            RewardPerSecond = input.ReadInt64();
            break;
          }
          case 50: {
            if (updateAddress_ == null) {
              UpdateAddress = new global::AElf.Types.Address();
            }
            input.ReadMessage(UpdateAddress);
            break;
          }
          case 58: {
            StakingToken = input.ReadString();
            break;
          }
          case 64: {
            FixedBoostFactor = input.ReadInt64();
            break;
          }
          case 72: {
            MinimumAmount = input.ReadInt64();
            break;
          }
          case 80: {
            ReleasePeriod = input.ReadInt64();
            break;
          }
          case 88: {
            MaximumStakeDuration = input.ReadInt64();
            break;
          }
          case 98: {
            if (rewardTokenContract_ == null) {
              RewardTokenContract = new global::AElf.Types.Address();
            }
            input.ReadMessage(RewardTokenContract);
            break;
          }
          case 106: {
            if (stakeTokenContract_ == null) {
              StakeTokenContract = new global::AElf.Types.Address();
            }
            input.ReadMessage(StakeTokenContract);
            break;
          }
          case 112: {
            MinimumClaimAmount = input.ReadInt64();
            break;
          }
          case 120: {
            MinimumStakeDuration = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (dappId_ == null) {
              DappId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(DappId);
            break;
          }
          case 18: {
            RewardToken = input.ReadString();
            break;
          }
          case 24: {
            StartTime = input.ReadInt64();
            break;
          }
          case 32: {
            EndTime = input.ReadInt64();
            break;
          }
          case 40: {
            RewardPerSecond = input.ReadInt64();
            break;
          }
          case 50: {
            if (updateAddress_ == null) {
              UpdateAddress = new global::AElf.Types.Address();
            }
            input.ReadMessage(UpdateAddress);
            break;
          }
          case 58: {
            StakingToken = input.ReadString();
            break;
          }
          case 64: {
            FixedBoostFactor = input.ReadInt64();
            break;
          }
          case 72: {
            MinimumAmount = input.ReadInt64();
            break;
          }
          case 80: {
            ReleasePeriod = input.ReadInt64();
            break;
          }
          case 88: {
            MaximumStakeDuration = input.ReadInt64();
            break;
          }
          case 98: {
            if (rewardTokenContract_ == null) {
              RewardTokenContract = new global::AElf.Types.Address();
            }
            input.ReadMessage(RewardTokenContract);
            break;
          }
          case 106: {
            if (stakeTokenContract_ == null) {
              StakeTokenContract = new global::AElf.Types.Address();
            }
            input.ReadMessage(StakeTokenContract);
            break;
          }
          case 112: {
            MinimumClaimAmount = input.ReadInt64();
            break;
          }
          case 120: {
            MinimumStakeDuration = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TokensPoolConfig : pb::IMessage<TokensPoolConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TokensPoolConfig> _parser = new pb::MessageParser<TokensPoolConfig>(() => new TokensPoolConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TokensPoolConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokensPoolConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokensPoolConfig(TokensPoolConfig other) : this() {
      rewardToken_ = other.rewardToken_;
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      endTime_ = other.endTime_ != null ? other.endTime_.Clone() : null;
      rewardPerSecond_ = other.rewardPerSecond_;
      updateAddress_ = other.updateAddress_ != null ? other.updateAddress_.Clone() : null;
      stakingToken_ = other.stakingToken_;
      fixedBoostFactor_ = other.fixedBoostFactor_;
      minimumAmount_ = other.minimumAmount_;
      releasePeriod_ = other.releasePeriod_;
      maximumStakeDuration_ = other.maximumStakeDuration_;
      rewardTokenContract_ = other.rewardTokenContract_ != null ? other.rewardTokenContract_.Clone() : null;
      stakeTokenContract_ = other.stakeTokenContract_ != null ? other.stakeTokenContract_.Clone() : null;
      minimumClaimAmount_ = other.minimumClaimAmount_;
      minimumStakeDuration_ = other.minimumStakeDuration_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokensPoolConfig Clone() {
      return new TokensPoolConfig(this);
    }

    /// <summary>Field number for the "reward_token" field.</summary>
    public const int RewardTokenFieldNumber = 1;
    private string rewardToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RewardToken {
      get { return rewardToken_; }
      set {
        rewardToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    /// <summary>Field number for the "reward_per_second" field.</summary>
    public const int RewardPerSecondFieldNumber = 4;
    private long rewardPerSecond_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RewardPerSecond {
      get { return rewardPerSecond_; }
      set {
        rewardPerSecond_ = value;
      }
    }

    /// <summary>Field number for the "update_address" field.</summary>
    public const int UpdateAddressFieldNumber = 5;
    private global::AElf.Types.Address updateAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address UpdateAddress {
      get { return updateAddress_; }
      set {
        updateAddress_ = value;
      }
    }

    /// <summary>Field number for the "staking_token" field.</summary>
    public const int StakingTokenFieldNumber = 6;
    private string stakingToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StakingToken {
      get { return stakingToken_; }
      set {
        stakingToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fixed_boost_factor" field.</summary>
    public const int FixedBoostFactorFieldNumber = 7;
    private long fixedBoostFactor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long FixedBoostFactor {
      get { return fixedBoostFactor_; }
      set {
        fixedBoostFactor_ = value;
      }
    }

    /// <summary>Field number for the "minimum_amount" field.</summary>
    public const int MinimumAmountFieldNumber = 8;
    private long minimumAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MinimumAmount {
      get { return minimumAmount_; }
      set {
        minimumAmount_ = value;
      }
    }

    /// <summary>Field number for the "release_period" field.</summary>
    public const int ReleasePeriodFieldNumber = 9;
    private long releasePeriod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ReleasePeriod {
      get { return releasePeriod_; }
      set {
        releasePeriod_ = value;
      }
    }

    /// <summary>Field number for the "maximum_stake_duration" field.</summary>
    public const int MaximumStakeDurationFieldNumber = 10;
    private long maximumStakeDuration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MaximumStakeDuration {
      get { return maximumStakeDuration_; }
      set {
        maximumStakeDuration_ = value;
      }
    }

    /// <summary>Field number for the "reward_token_contract" field.</summary>
    public const int RewardTokenContractFieldNumber = 11;
    private global::AElf.Types.Address rewardTokenContract_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address RewardTokenContract {
      get { return rewardTokenContract_; }
      set {
        rewardTokenContract_ = value;
      }
    }

    /// <summary>Field number for the "stake_token_contract" field.</summary>
    public const int StakeTokenContractFieldNumber = 12;
    private global::AElf.Types.Address stakeTokenContract_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address StakeTokenContract {
      get { return stakeTokenContract_; }
      set {
        stakeTokenContract_ = value;
      }
    }

    /// <summary>Field number for the "minimum_claim_amount" field.</summary>
    public const int MinimumClaimAmountFieldNumber = 13;
    private long minimumClaimAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MinimumClaimAmount {
      get { return minimumClaimAmount_; }
      set {
        minimumClaimAmount_ = value;
      }
    }

    /// <summary>Field number for the "minimum_stake_duration" field.</summary>
    public const int MinimumStakeDurationFieldNumber = 14;
    private long minimumStakeDuration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MinimumStakeDuration {
      get { return minimumStakeDuration_; }
      set {
        minimumStakeDuration_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TokensPoolConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TokensPoolConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RewardToken != other.RewardToken) return false;
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (!object.Equals(EndTime, other.EndTime)) return false;
      if (RewardPerSecond != other.RewardPerSecond) return false;
      if (!object.Equals(UpdateAddress, other.UpdateAddress)) return false;
      if (StakingToken != other.StakingToken) return false;
      if (FixedBoostFactor != other.FixedBoostFactor) return false;
      if (MinimumAmount != other.MinimumAmount) return false;
      if (ReleasePeriod != other.ReleasePeriod) return false;
      if (MaximumStakeDuration != other.MaximumStakeDuration) return false;
      if (!object.Equals(RewardTokenContract, other.RewardTokenContract)) return false;
      if (!object.Equals(StakeTokenContract, other.StakeTokenContract)) return false;
      if (MinimumClaimAmount != other.MinimumClaimAmount) return false;
      if (MinimumStakeDuration != other.MinimumStakeDuration) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RewardToken.Length != 0) hash ^= RewardToken.GetHashCode();
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (endTime_ != null) hash ^= EndTime.GetHashCode();
      if (RewardPerSecond != 0L) hash ^= RewardPerSecond.GetHashCode();
      if (updateAddress_ != null) hash ^= UpdateAddress.GetHashCode();
      if (StakingToken.Length != 0) hash ^= StakingToken.GetHashCode();
      if (FixedBoostFactor != 0L) hash ^= FixedBoostFactor.GetHashCode();
      if (MinimumAmount != 0L) hash ^= MinimumAmount.GetHashCode();
      if (ReleasePeriod != 0L) hash ^= ReleasePeriod.GetHashCode();
      if (MaximumStakeDuration != 0L) hash ^= MaximumStakeDuration.GetHashCode();
      if (rewardTokenContract_ != null) hash ^= RewardTokenContract.GetHashCode();
      if (stakeTokenContract_ != null) hash ^= StakeTokenContract.GetHashCode();
      if (MinimumClaimAmount != 0L) hash ^= MinimumClaimAmount.GetHashCode();
      if (MinimumStakeDuration != 0L) hash ^= MinimumStakeDuration.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RewardToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RewardToken);
      }
      if (startTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(EndTime);
      }
      if (RewardPerSecond != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(RewardPerSecond);
      }
      if (updateAddress_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(UpdateAddress);
      }
      if (StakingToken.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(StakingToken);
      }
      if (FixedBoostFactor != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(FixedBoostFactor);
      }
      if (MinimumAmount != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(MinimumAmount);
      }
      if (ReleasePeriod != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(ReleasePeriod);
      }
      if (MaximumStakeDuration != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(MaximumStakeDuration);
      }
      if (rewardTokenContract_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(RewardTokenContract);
      }
      if (stakeTokenContract_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(StakeTokenContract);
      }
      if (MinimumClaimAmount != 0L) {
        output.WriteRawTag(104);
        output.WriteInt64(MinimumClaimAmount);
      }
      if (MinimumStakeDuration != 0L) {
        output.WriteRawTag(112);
        output.WriteInt64(MinimumStakeDuration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RewardToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RewardToken);
      }
      if (startTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(EndTime);
      }
      if (RewardPerSecond != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(RewardPerSecond);
      }
      if (updateAddress_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(UpdateAddress);
      }
      if (StakingToken.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(StakingToken);
      }
      if (FixedBoostFactor != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(FixedBoostFactor);
      }
      if (MinimumAmount != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(MinimumAmount);
      }
      if (ReleasePeriod != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(ReleasePeriod);
      }
      if (MaximumStakeDuration != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(MaximumStakeDuration);
      }
      if (rewardTokenContract_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(RewardTokenContract);
      }
      if (stakeTokenContract_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(StakeTokenContract);
      }
      if (MinimumClaimAmount != 0L) {
        output.WriteRawTag(104);
        output.WriteInt64(MinimumClaimAmount);
      }
      if (MinimumStakeDuration != 0L) {
        output.WriteRawTag(112);
        output.WriteInt64(MinimumStakeDuration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RewardToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RewardToken);
      }
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (endTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTime);
      }
      if (RewardPerSecond != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RewardPerSecond);
      }
      if (updateAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateAddress);
      }
      if (StakingToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StakingToken);
      }
      if (FixedBoostFactor != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FixedBoostFactor);
      }
      if (MinimumAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinimumAmount);
      }
      if (ReleasePeriod != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ReleasePeriod);
      }
      if (MaximumStakeDuration != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaximumStakeDuration);
      }
      if (rewardTokenContract_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RewardTokenContract);
      }
      if (stakeTokenContract_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StakeTokenContract);
      }
      if (MinimumClaimAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinimumClaimAmount);
      }
      if (MinimumStakeDuration != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinimumStakeDuration);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TokensPoolConfig other) {
      if (other == null) {
        return;
      }
      if (other.RewardToken.Length != 0) {
        RewardToken = other.RewardToken;
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.endTime_ != null) {
        if (endTime_ == null) {
          EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTime.MergeFrom(other.EndTime);
      }
      if (other.RewardPerSecond != 0L) {
        RewardPerSecond = other.RewardPerSecond;
      }
      if (other.updateAddress_ != null) {
        if (updateAddress_ == null) {
          UpdateAddress = new global::AElf.Types.Address();
        }
        UpdateAddress.MergeFrom(other.UpdateAddress);
      }
      if (other.StakingToken.Length != 0) {
        StakingToken = other.StakingToken;
      }
      if (other.FixedBoostFactor != 0L) {
        FixedBoostFactor = other.FixedBoostFactor;
      }
      if (other.MinimumAmount != 0L) {
        MinimumAmount = other.MinimumAmount;
      }
      if (other.ReleasePeriod != 0L) {
        ReleasePeriod = other.ReleasePeriod;
      }
      if (other.MaximumStakeDuration != 0L) {
        MaximumStakeDuration = other.MaximumStakeDuration;
      }
      if (other.rewardTokenContract_ != null) {
        if (rewardTokenContract_ == null) {
          RewardTokenContract = new global::AElf.Types.Address();
        }
        RewardTokenContract.MergeFrom(other.RewardTokenContract);
      }
      if (other.stakeTokenContract_ != null) {
        if (stakeTokenContract_ == null) {
          StakeTokenContract = new global::AElf.Types.Address();
        }
        StakeTokenContract.MergeFrom(other.StakeTokenContract);
      }
      if (other.MinimumClaimAmount != 0L) {
        MinimumClaimAmount = other.MinimumClaimAmount;
      }
      if (other.MinimumStakeDuration != 0L) {
        MinimumStakeDuration = other.MinimumStakeDuration;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RewardToken = input.ReadString();
            break;
          }
          case 18: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 26: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 32: {
            RewardPerSecond = input.ReadInt64();
            break;
          }
          case 42: {
            if (updateAddress_ == null) {
              UpdateAddress = new global::AElf.Types.Address();
            }
            input.ReadMessage(UpdateAddress);
            break;
          }
          case 50: {
            StakingToken = input.ReadString();
            break;
          }
          case 56: {
            FixedBoostFactor = input.ReadInt64();
            break;
          }
          case 64: {
            MinimumAmount = input.ReadInt64();
            break;
          }
          case 72: {
            ReleasePeriod = input.ReadInt64();
            break;
          }
          case 80: {
            MaximumStakeDuration = input.ReadInt64();
            break;
          }
          case 90: {
            if (rewardTokenContract_ == null) {
              RewardTokenContract = new global::AElf.Types.Address();
            }
            input.ReadMessage(RewardTokenContract);
            break;
          }
          case 98: {
            if (stakeTokenContract_ == null) {
              StakeTokenContract = new global::AElf.Types.Address();
            }
            input.ReadMessage(StakeTokenContract);
            break;
          }
          case 104: {
            MinimumClaimAmount = input.ReadInt64();
            break;
          }
          case 112: {
            MinimumStakeDuration = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            RewardToken = input.ReadString();
            break;
          }
          case 18: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 26: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 32: {
            RewardPerSecond = input.ReadInt64();
            break;
          }
          case 42: {
            if (updateAddress_ == null) {
              UpdateAddress = new global::AElf.Types.Address();
            }
            input.ReadMessage(UpdateAddress);
            break;
          }
          case 50: {
            StakingToken = input.ReadString();
            break;
          }
          case 56: {
            FixedBoostFactor = input.ReadInt64();
            break;
          }
          case 64: {
            MinimumAmount = input.ReadInt64();
            break;
          }
          case 72: {
            ReleasePeriod = input.ReadInt64();
            break;
          }
          case 80: {
            MaximumStakeDuration = input.ReadInt64();
            break;
          }
          case 90: {
            if (rewardTokenContract_ == null) {
              RewardTokenContract = new global::AElf.Types.Address();
            }
            input.ReadMessage(RewardTokenContract);
            break;
          }
          case 98: {
            if (stakeTokenContract_ == null) {
              StakeTokenContract = new global::AElf.Types.Address();
            }
            input.ReadMessage(StakeTokenContract);
            break;
          }
          case 104: {
            MinimumClaimAmount = input.ReadInt64();
            break;
          }
          case 112: {
            MinimumStakeDuration = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SetTokensPoolEndTimeInput : pb::IMessage<SetTokensPoolEndTimeInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SetTokensPoolEndTimeInput> _parser = new pb::MessageParser<SetTokensPoolEndTimeInput>(() => new SetTokensPoolEndTimeInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SetTokensPoolEndTimeInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetTokensPoolEndTimeInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetTokensPoolEndTimeInput(SetTokensPoolEndTimeInput other) : this() {
      poolId_ = other.poolId_ != null ? other.poolId_.Clone() : null;
      endTime_ = other.endTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetTokensPoolEndTimeInput Clone() {
      return new SetTokensPoolEndTimeInput(this);
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 1;
    private global::AElf.Types.Hash poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 2;
    private long endTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SetTokensPoolEndTimeInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SetTokensPoolEndTimeInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PoolId, other.PoolId)) return false;
      if (EndTime != other.EndTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (poolId_ != null) hash ^= PoolId.GetHashCode();
      if (EndTime != 0L) hash ^= EndTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (EndTime != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (EndTime != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (poolId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolId);
      }
      if (EndTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SetTokensPoolEndTimeInput other) {
      if (other == null) {
        return;
      }
      if (other.poolId_ != null) {
        if (poolId_ == null) {
          PoolId = new global::AElf.Types.Hash();
        }
        PoolId.MergeFrom(other.PoolId);
      }
      if (other.EndTime != 0L) {
        EndTime = other.EndTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 16: {
            EndTime = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 16: {
            EndTime = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SetTokensPoolUpdateAddressInput : pb::IMessage<SetTokensPoolUpdateAddressInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SetTokensPoolUpdateAddressInput> _parser = new pb::MessageParser<SetTokensPoolUpdateAddressInput>(() => new SetTokensPoolUpdateAddressInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SetTokensPoolUpdateAddressInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetTokensPoolUpdateAddressInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetTokensPoolUpdateAddressInput(SetTokensPoolUpdateAddressInput other) : this() {
      poolId_ = other.poolId_ != null ? other.poolId_.Clone() : null;
      updateAddress_ = other.updateAddress_ != null ? other.updateAddress_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetTokensPoolUpdateAddressInput Clone() {
      return new SetTokensPoolUpdateAddressInput(this);
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 1;
    private global::AElf.Types.Hash poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "update_address" field.</summary>
    public const int UpdateAddressFieldNumber = 2;
    private global::AElf.Types.Address updateAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address UpdateAddress {
      get { return updateAddress_; }
      set {
        updateAddress_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SetTokensPoolUpdateAddressInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SetTokensPoolUpdateAddressInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PoolId, other.PoolId)) return false;
      if (!object.Equals(UpdateAddress, other.UpdateAddress)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (poolId_ != null) hash ^= PoolId.GetHashCode();
      if (updateAddress_ != null) hash ^= UpdateAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (updateAddress_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UpdateAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (updateAddress_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UpdateAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (poolId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolId);
      }
      if (updateAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SetTokensPoolUpdateAddressInput other) {
      if (other == null) {
        return;
      }
      if (other.poolId_ != null) {
        if (poolId_ == null) {
          PoolId = new global::AElf.Types.Hash();
        }
        PoolId.MergeFrom(other.PoolId);
      }
      if (other.updateAddress_ != null) {
        if (updateAddress_ == null) {
          UpdateAddress = new global::AElf.Types.Address();
        }
        UpdateAddress.MergeFrom(other.UpdateAddress);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 18: {
            if (updateAddress_ == null) {
              UpdateAddress = new global::AElf.Types.Address();
            }
            input.ReadMessage(UpdateAddress);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 18: {
            if (updateAddress_ == null) {
              UpdateAddress = new global::AElf.Types.Address();
            }
            input.ReadMessage(UpdateAddress);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SetTokensPoolRewardReleasePeriodInput : pb::IMessage<SetTokensPoolRewardReleasePeriodInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SetTokensPoolRewardReleasePeriodInput> _parser = new pb::MessageParser<SetTokensPoolRewardReleasePeriodInput>(() => new SetTokensPoolRewardReleasePeriodInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SetTokensPoolRewardReleasePeriodInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetTokensPoolRewardReleasePeriodInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetTokensPoolRewardReleasePeriodInput(SetTokensPoolRewardReleasePeriodInput other) : this() {
      poolId_ = other.poolId_ != null ? other.poolId_.Clone() : null;
      releasePeriod_ = other.releasePeriod_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetTokensPoolRewardReleasePeriodInput Clone() {
      return new SetTokensPoolRewardReleasePeriodInput(this);
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 1;
    private global::AElf.Types.Hash poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "release_period" field.</summary>
    public const int ReleasePeriodFieldNumber = 2;
    private long releasePeriod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ReleasePeriod {
      get { return releasePeriod_; }
      set {
        releasePeriod_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SetTokensPoolRewardReleasePeriodInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SetTokensPoolRewardReleasePeriodInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PoolId, other.PoolId)) return false;
      if (ReleasePeriod != other.ReleasePeriod) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (poolId_ != null) hash ^= PoolId.GetHashCode();
      if (ReleasePeriod != 0L) hash ^= ReleasePeriod.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (ReleasePeriod != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ReleasePeriod);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (ReleasePeriod != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ReleasePeriod);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (poolId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolId);
      }
      if (ReleasePeriod != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ReleasePeriod);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SetTokensPoolRewardReleasePeriodInput other) {
      if (other == null) {
        return;
      }
      if (other.poolId_ != null) {
        if (poolId_ == null) {
          PoolId = new global::AElf.Types.Hash();
        }
        PoolId.MergeFrom(other.PoolId);
      }
      if (other.ReleasePeriod != 0L) {
        ReleasePeriod = other.ReleasePeriod;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 16: {
            ReleasePeriod = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 16: {
            ReleasePeriod = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SetTokensPoolStakeConfigInput : pb::IMessage<SetTokensPoolStakeConfigInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SetTokensPoolStakeConfigInput> _parser = new pb::MessageParser<SetTokensPoolStakeConfigInput>(() => new SetTokensPoolStakeConfigInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SetTokensPoolStakeConfigInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetTokensPoolStakeConfigInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetTokensPoolStakeConfigInput(SetTokensPoolStakeConfigInput other) : this() {
      poolId_ = other.poolId_ != null ? other.poolId_.Clone() : null;
      minimumAmount_ = other.minimumAmount_;
      maximumStakeDuration_ = other.maximumStakeDuration_;
      minimumClaimAmount_ = other.minimumClaimAmount_;
      minimumStakeDuration_ = other.minimumStakeDuration_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetTokensPoolStakeConfigInput Clone() {
      return new SetTokensPoolStakeConfigInput(this);
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 1;
    private global::AElf.Types.Hash poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "minimum_amount" field.</summary>
    public const int MinimumAmountFieldNumber = 2;
    private long minimumAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MinimumAmount {
      get { return minimumAmount_; }
      set {
        minimumAmount_ = value;
      }
    }

    /// <summary>Field number for the "maximum_stake_duration" field.</summary>
    public const int MaximumStakeDurationFieldNumber = 3;
    private long maximumStakeDuration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MaximumStakeDuration {
      get { return maximumStakeDuration_; }
      set {
        maximumStakeDuration_ = value;
      }
    }

    /// <summary>Field number for the "minimum_claim_amount" field.</summary>
    public const int MinimumClaimAmountFieldNumber = 4;
    private long minimumClaimAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MinimumClaimAmount {
      get { return minimumClaimAmount_; }
      set {
        minimumClaimAmount_ = value;
      }
    }

    /// <summary>Field number for the "minimum_stake_duration" field.</summary>
    public const int MinimumStakeDurationFieldNumber = 5;
    private long minimumStakeDuration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MinimumStakeDuration {
      get { return minimumStakeDuration_; }
      set {
        minimumStakeDuration_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SetTokensPoolStakeConfigInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SetTokensPoolStakeConfigInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PoolId, other.PoolId)) return false;
      if (MinimumAmount != other.MinimumAmount) return false;
      if (MaximumStakeDuration != other.MaximumStakeDuration) return false;
      if (MinimumClaimAmount != other.MinimumClaimAmount) return false;
      if (MinimumStakeDuration != other.MinimumStakeDuration) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (poolId_ != null) hash ^= PoolId.GetHashCode();
      if (MinimumAmount != 0L) hash ^= MinimumAmount.GetHashCode();
      if (MaximumStakeDuration != 0L) hash ^= MaximumStakeDuration.GetHashCode();
      if (MinimumClaimAmount != 0L) hash ^= MinimumClaimAmount.GetHashCode();
      if (MinimumStakeDuration != 0L) hash ^= MinimumStakeDuration.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (MinimumAmount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(MinimumAmount);
      }
      if (MaximumStakeDuration != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(MaximumStakeDuration);
      }
      if (MinimumClaimAmount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(MinimumClaimAmount);
      }
      if (MinimumStakeDuration != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(MinimumStakeDuration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (MinimumAmount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(MinimumAmount);
      }
      if (MaximumStakeDuration != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(MaximumStakeDuration);
      }
      if (MinimumClaimAmount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(MinimumClaimAmount);
      }
      if (MinimumStakeDuration != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(MinimumStakeDuration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (poolId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolId);
      }
      if (MinimumAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinimumAmount);
      }
      if (MaximumStakeDuration != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaximumStakeDuration);
      }
      if (MinimumClaimAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinimumClaimAmount);
      }
      if (MinimumStakeDuration != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinimumStakeDuration);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SetTokensPoolStakeConfigInput other) {
      if (other == null) {
        return;
      }
      if (other.poolId_ != null) {
        if (poolId_ == null) {
          PoolId = new global::AElf.Types.Hash();
        }
        PoolId.MergeFrom(other.PoolId);
      }
      if (other.MinimumAmount != 0L) {
        MinimumAmount = other.MinimumAmount;
      }
      if (other.MaximumStakeDuration != 0L) {
        MaximumStakeDuration = other.MaximumStakeDuration;
      }
      if (other.MinimumClaimAmount != 0L) {
        MinimumClaimAmount = other.MinimumClaimAmount;
      }
      if (other.MinimumStakeDuration != 0L) {
        MinimumStakeDuration = other.MinimumStakeDuration;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 16: {
            MinimumAmount = input.ReadInt64();
            break;
          }
          case 24: {
            MaximumStakeDuration = input.ReadInt64();
            break;
          }
          case 32: {
            MinimumClaimAmount = input.ReadInt64();
            break;
          }
          case 40: {
            MinimumStakeDuration = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 16: {
            MinimumAmount = input.ReadInt64();
            break;
          }
          case 24: {
            MaximumStakeDuration = input.ReadInt64();
            break;
          }
          case 32: {
            MinimumClaimAmount = input.ReadInt64();
            break;
          }
          case 40: {
            MinimumStakeDuration = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SetTokensPoolFixedBoostFactorInput : pb::IMessage<SetTokensPoolFixedBoostFactorInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SetTokensPoolFixedBoostFactorInput> _parser = new pb::MessageParser<SetTokensPoolFixedBoostFactorInput>(() => new SetTokensPoolFixedBoostFactorInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SetTokensPoolFixedBoostFactorInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetTokensPoolFixedBoostFactorInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetTokensPoolFixedBoostFactorInput(SetTokensPoolFixedBoostFactorInput other) : this() {
      poolId_ = other.poolId_ != null ? other.poolId_.Clone() : null;
      fixedBoostFactor_ = other.fixedBoostFactor_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetTokensPoolFixedBoostFactorInput Clone() {
      return new SetTokensPoolFixedBoostFactorInput(this);
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 1;
    private global::AElf.Types.Hash poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "fixed_boost_factor" field.</summary>
    public const int FixedBoostFactorFieldNumber = 2;
    private long fixedBoostFactor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long FixedBoostFactor {
      get { return fixedBoostFactor_; }
      set {
        fixedBoostFactor_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SetTokensPoolFixedBoostFactorInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SetTokensPoolFixedBoostFactorInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PoolId, other.PoolId)) return false;
      if (FixedBoostFactor != other.FixedBoostFactor) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (poolId_ != null) hash ^= PoolId.GetHashCode();
      if (FixedBoostFactor != 0L) hash ^= FixedBoostFactor.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (FixedBoostFactor != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(FixedBoostFactor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (FixedBoostFactor != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(FixedBoostFactor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (poolId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolId);
      }
      if (FixedBoostFactor != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FixedBoostFactor);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SetTokensPoolFixedBoostFactorInput other) {
      if (other == null) {
        return;
      }
      if (other.poolId_ != null) {
        if (poolId_ == null) {
          PoolId = new global::AElf.Types.Hash();
        }
        PoolId.MergeFrom(other.PoolId);
      }
      if (other.FixedBoostFactor != 0L) {
        FixedBoostFactor = other.FixedBoostFactor;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 16: {
            FixedBoostFactor = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 16: {
            FixedBoostFactor = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SetTokensPoolRewardPerSecondInput : pb::IMessage<SetTokensPoolRewardPerSecondInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SetTokensPoolRewardPerSecondInput> _parser = new pb::MessageParser<SetTokensPoolRewardPerSecondInput>(() => new SetTokensPoolRewardPerSecondInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SetTokensPoolRewardPerSecondInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetTokensPoolRewardPerSecondInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetTokensPoolRewardPerSecondInput(SetTokensPoolRewardPerSecondInput other) : this() {
      poolId_ = other.poolId_ != null ? other.poolId_.Clone() : null;
      rewardPerSecond_ = other.rewardPerSecond_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetTokensPoolRewardPerSecondInput Clone() {
      return new SetTokensPoolRewardPerSecondInput(this);
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 1;
    private global::AElf.Types.Hash poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "reward_per_second" field.</summary>
    public const int RewardPerSecondFieldNumber = 2;
    private long rewardPerSecond_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RewardPerSecond {
      get { return rewardPerSecond_; }
      set {
        rewardPerSecond_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SetTokensPoolRewardPerSecondInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SetTokensPoolRewardPerSecondInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PoolId, other.PoolId)) return false;
      if (RewardPerSecond != other.RewardPerSecond) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (poolId_ != null) hash ^= PoolId.GetHashCode();
      if (RewardPerSecond != 0L) hash ^= RewardPerSecond.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (RewardPerSecond != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(RewardPerSecond);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (RewardPerSecond != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(RewardPerSecond);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (poolId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolId);
      }
      if (RewardPerSecond != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RewardPerSecond);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SetTokensPoolRewardPerSecondInput other) {
      if (other == null) {
        return;
      }
      if (other.poolId_ != null) {
        if (poolId_ == null) {
          PoolId = new global::AElf.Types.Hash();
        }
        PoolId.MergeFrom(other.PoolId);
      }
      if (other.RewardPerSecond != 0L) {
        RewardPerSecond = other.RewardPerSecond;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 16: {
            RewardPerSecond = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 16: {
            RewardPerSecond = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetPoolInfoOutput : pb::IMessage<GetPoolInfoOutput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetPoolInfoOutput> _parser = new pb::MessageParser<GetPoolInfoOutput>(() => new GetPoolInfoOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetPoolInfoOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetPoolInfoOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetPoolInfoOutput(GetPoolInfoOutput other) : this() {
      poolInfo_ = other.poolInfo_ != null ? other.poolInfo_.Clone() : null;
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetPoolInfoOutput Clone() {
      return new GetPoolInfoOutput(this);
    }

    /// <summary>Field number for the "pool_info" field.</summary>
    public const int PoolInfoFieldNumber = 1;
    private global::EcoEarn.Contracts.Tokens.PoolInfo poolInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EcoEarn.Contracts.Tokens.PoolInfo PoolInfo {
      get { return poolInfo_; }
      set {
        poolInfo_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private bool status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetPoolInfoOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetPoolInfoOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PoolInfo, other.PoolInfo)) return false;
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (poolInfo_ != null) hash ^= PoolInfo.GetHashCode();
      if (Status != false) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (poolInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolInfo);
      }
      if (Status != false) {
        output.WriteRawTag(16);
        output.WriteBool(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (poolInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolInfo);
      }
      if (Status != false) {
        output.WriteRawTag(16);
        output.WriteBool(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (poolInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolInfo);
      }
      if (Status != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetPoolInfoOutput other) {
      if (other == null) {
        return;
      }
      if (other.poolInfo_ != null) {
        if (poolInfo_ == null) {
          PoolInfo = new global::EcoEarn.Contracts.Tokens.PoolInfo();
        }
        PoolInfo.MergeFrom(other.PoolInfo);
      }
      if (other.Status != false) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (poolInfo_ == null) {
              PoolInfo = new global::EcoEarn.Contracts.Tokens.PoolInfo();
            }
            input.ReadMessage(PoolInfo);
            break;
          }
          case 16: {
            Status = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (poolInfo_ == null) {
              PoolInfo = new global::EcoEarn.Contracts.Tokens.PoolInfo();
            }
            input.ReadMessage(PoolInfo);
            break;
          }
          case 16: {
            Status = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PoolInfo : pb::IMessage<PoolInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PoolInfo> _parser = new pb::MessageParser<PoolInfo>(() => new PoolInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PoolInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PoolInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PoolInfo(PoolInfo other) : this() {
      dappId_ = other.dappId_ != null ? other.dappId_.Clone() : null;
      poolId_ = other.poolId_ != null ? other.poolId_.Clone() : null;
      config_ = other.config_ != null ? other.config_.Clone() : null;
      precisionFactor_ = other.precisionFactor_ != null ? other.precisionFactor_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PoolInfo Clone() {
      return new PoolInfo(this);
    }

    /// <summary>Field number for the "dapp_id" field.</summary>
    public const int DappIdFieldNumber = 1;
    private global::AElf.Types.Hash dappId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash DappId {
      get { return dappId_; }
      set {
        dappId_ = value;
      }
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 2;
    private global::AElf.Types.Hash poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 3;
    private global::EcoEarn.Contracts.Tokens.TokensPoolConfig config_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EcoEarn.Contracts.Tokens.TokensPoolConfig Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    /// <summary>Field number for the "precision_factor" field.</summary>
    public const int PrecisionFactorFieldNumber = 4;
    private global::AElf.Types.BigIntValue precisionFactor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.BigIntValue PrecisionFactor {
      get { return precisionFactor_; }
      set {
        precisionFactor_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PoolInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PoolInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DappId, other.DappId)) return false;
      if (!object.Equals(PoolId, other.PoolId)) return false;
      if (!object.Equals(Config, other.Config)) return false;
      if (!object.Equals(PrecisionFactor, other.PrecisionFactor)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (dappId_ != null) hash ^= DappId.GetHashCode();
      if (poolId_ != null) hash ^= PoolId.GetHashCode();
      if (config_ != null) hash ^= Config.GetHashCode();
      if (precisionFactor_ != null) hash ^= PrecisionFactor.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (dappId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DappId);
      }
      if (poolId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PoolId);
      }
      if (config_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Config);
      }
      if (precisionFactor_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PrecisionFactor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (dappId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DappId);
      }
      if (poolId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PoolId);
      }
      if (config_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Config);
      }
      if (precisionFactor_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PrecisionFactor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (dappId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DappId);
      }
      if (poolId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolId);
      }
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (precisionFactor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PrecisionFactor);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PoolInfo other) {
      if (other == null) {
        return;
      }
      if (other.dappId_ != null) {
        if (dappId_ == null) {
          DappId = new global::AElf.Types.Hash();
        }
        DappId.MergeFrom(other.DappId);
      }
      if (other.poolId_ != null) {
        if (poolId_ == null) {
          PoolId = new global::AElf.Types.Hash();
        }
        PoolId.MergeFrom(other.PoolId);
      }
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::EcoEarn.Contracts.Tokens.TokensPoolConfig();
        }
        Config.MergeFrom(other.Config);
      }
      if (other.precisionFactor_ != null) {
        if (precisionFactor_ == null) {
          PrecisionFactor = new global::AElf.Types.BigIntValue();
        }
        PrecisionFactor.MergeFrom(other.PrecisionFactor);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (dappId_ == null) {
              DappId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(DappId);
            break;
          }
          case 18: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 26: {
            if (config_ == null) {
              Config = new global::EcoEarn.Contracts.Tokens.TokensPoolConfig();
            }
            input.ReadMessage(Config);
            break;
          }
          case 34: {
            if (precisionFactor_ == null) {
              PrecisionFactor = new global::AElf.Types.BigIntValue();
            }
            input.ReadMessage(PrecisionFactor);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (dappId_ == null) {
              DappId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(DappId);
            break;
          }
          case 18: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 26: {
            if (config_ == null) {
              Config = new global::EcoEarn.Contracts.Tokens.TokensPoolConfig();
            }
            input.ReadMessage(Config);
            break;
          }
          case 34: {
            if (precisionFactor_ == null) {
              PrecisionFactor = new global::AElf.Types.BigIntValue();
            }
            input.ReadMessage(PrecisionFactor);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PoolData : pb::IMessage<PoolData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PoolData> _parser = new pb::MessageParser<PoolData>(() => new PoolData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PoolData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PoolData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PoolData(PoolData other) : this() {
      poolId_ = other.poolId_ != null ? other.poolId_.Clone() : null;
      accTokenPerShare_ = other.accTokenPerShare_ != null ? other.accTokenPerShare_.Clone() : null;
      lastRewardSecond_ = other.lastRewardSecond_ != null ? other.lastRewardSecond_.Clone() : null;
      totalStakedAmount_ = other.totalStakedAmount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PoolData Clone() {
      return new PoolData(this);
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 1;
    private global::AElf.Types.Hash poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "acc_token_per_share" field.</summary>
    public const int AccTokenPerShareFieldNumber = 2;
    private global::AElf.Types.BigIntValue accTokenPerShare_;
    /// <summary>
    /// Accrued token per share
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.BigIntValue AccTokenPerShare {
      get { return accTokenPerShare_; }
      set {
        accTokenPerShare_ = value;
      }
    }

    /// <summary>Field number for the "last_reward_second" field.</summary>
    public const int LastRewardSecondFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp lastRewardSecond_;
    /// <summary>
    /// The block number of the last pool update
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LastRewardSecond {
      get { return lastRewardSecond_; }
      set {
        lastRewardSecond_ = value;
      }
    }

    /// <summary>Field number for the "total_staked_amount" field.</summary>
    public const int TotalStakedAmountFieldNumber = 4;
    private long totalStakedAmount_;
    /// <summary>
    /// The amount of token staked
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TotalStakedAmount {
      get { return totalStakedAmount_; }
      set {
        totalStakedAmount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PoolData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PoolData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PoolId, other.PoolId)) return false;
      if (!object.Equals(AccTokenPerShare, other.AccTokenPerShare)) return false;
      if (!object.Equals(LastRewardSecond, other.LastRewardSecond)) return false;
      if (TotalStakedAmount != other.TotalStakedAmount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (poolId_ != null) hash ^= PoolId.GetHashCode();
      if (accTokenPerShare_ != null) hash ^= AccTokenPerShare.GetHashCode();
      if (lastRewardSecond_ != null) hash ^= LastRewardSecond.GetHashCode();
      if (TotalStakedAmount != 0L) hash ^= TotalStakedAmount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (accTokenPerShare_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AccTokenPerShare);
      }
      if (lastRewardSecond_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LastRewardSecond);
      }
      if (TotalStakedAmount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(TotalStakedAmount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (accTokenPerShare_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AccTokenPerShare);
      }
      if (lastRewardSecond_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LastRewardSecond);
      }
      if (TotalStakedAmount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(TotalStakedAmount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (poolId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolId);
      }
      if (accTokenPerShare_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccTokenPerShare);
      }
      if (lastRewardSecond_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastRewardSecond);
      }
      if (TotalStakedAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalStakedAmount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PoolData other) {
      if (other == null) {
        return;
      }
      if (other.poolId_ != null) {
        if (poolId_ == null) {
          PoolId = new global::AElf.Types.Hash();
        }
        PoolId.MergeFrom(other.PoolId);
      }
      if (other.accTokenPerShare_ != null) {
        if (accTokenPerShare_ == null) {
          AccTokenPerShare = new global::AElf.Types.BigIntValue();
        }
        AccTokenPerShare.MergeFrom(other.AccTokenPerShare);
      }
      if (other.lastRewardSecond_ != null) {
        if (lastRewardSecond_ == null) {
          LastRewardSecond = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LastRewardSecond.MergeFrom(other.LastRewardSecond);
      }
      if (other.TotalStakedAmount != 0L) {
        TotalStakedAmount = other.TotalStakedAmount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 18: {
            if (accTokenPerShare_ == null) {
              AccTokenPerShare = new global::AElf.Types.BigIntValue();
            }
            input.ReadMessage(AccTokenPerShare);
            break;
          }
          case 26: {
            if (lastRewardSecond_ == null) {
              LastRewardSecond = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastRewardSecond);
            break;
          }
          case 32: {
            TotalStakedAmount = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 18: {
            if (accTokenPerShare_ == null) {
              AccTokenPerShare = new global::AElf.Types.BigIntValue();
            }
            input.ReadMessage(AccTokenPerShare);
            break;
          }
          case 26: {
            if (lastRewardSecond_ == null) {
              LastRewardSecond = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastRewardSecond);
            break;
          }
          case 32: {
            TotalStakedAmount = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class StakeInput : pb::IMessage<StakeInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StakeInput> _parser = new pb::MessageParser<StakeInput>(() => new StakeInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StakeInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StakeInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StakeInput(StakeInput other) : this() {
      poolId_ = other.poolId_ != null ? other.poolId_.Clone() : null;
      amount_ = other.amount_;
      period_ = other.period_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StakeInput Clone() {
      return new StakeInput(this);
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 1;
    private global::AElf.Types.Hash poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "period" field.</summary>
    public const int PeriodFieldNumber = 3;
    private long period_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Period {
      get { return period_; }
      set {
        period_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StakeInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StakeInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PoolId, other.PoolId)) return false;
      if (Amount != other.Amount) return false;
      if (Period != other.Period) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (poolId_ != null) hash ^= PoolId.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (Period != 0L) hash ^= Period.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (Amount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Amount);
      }
      if (Period != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Period);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (Amount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Amount);
      }
      if (Period != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Period);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (poolId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolId);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (Period != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Period);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StakeInput other) {
      if (other == null) {
        return;
      }
      if (other.poolId_ != null) {
        if (poolId_ == null) {
          PoolId = new global::AElf.Types.Hash();
        }
        PoolId.MergeFrom(other.PoolId);
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      if (other.Period != 0L) {
        Period = other.Period;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 16: {
            Amount = input.ReadInt64();
            break;
          }
          case 24: {
            Period = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 16: {
            Amount = input.ReadInt64();
            break;
          }
          case 24: {
            Period = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class StakeInfo : pb::IMessage<StakeInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StakeInfo> _parser = new pb::MessageParser<StakeInfo>(() => new StakeInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StakeInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StakeInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StakeInfo(StakeInfo other) : this() {
      stakeId_ = other.stakeId_ != null ? other.stakeId_.Clone() : null;
      poolId_ = other.poolId_ != null ? other.poolId_.Clone() : null;
      stakedAmount_ = other.stakedAmount_;
      earlyStakedAmount_ = other.earlyStakedAmount_;
      stakedBlockNumber_ = other.stakedBlockNumber_;
      stakedTime_ = other.stakedTime_ != null ? other.stakedTime_.Clone() : null;
      period_ = other.period_;
      account_ = other.account_ != null ? other.account_.Clone() : null;
      boostedAmount_ = other.boostedAmount_;
      rewardDebt_ = other.rewardDebt_;
      unlockTime_ = other.unlockTime_ != null ? other.unlockTime_.Clone() : null;
      rewardAmount_ = other.rewardAmount_;
      lockedRewardAmount_ = other.lockedRewardAmount_;
      claimedAmount_ = other.claimedAmount_;
      stakingToken_ = other.stakingToken_;
      lastOperationTime_ = other.lastOperationTime_ != null ? other.lastOperationTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StakeInfo Clone() {
      return new StakeInfo(this);
    }

    /// <summary>Field number for the "stake_id" field.</summary>
    public const int StakeIdFieldNumber = 1;
    private global::AElf.Types.Hash stakeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash StakeId {
      get { return stakeId_; }
      set {
        stakeId_ = value;
      }
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 2;
    private global::AElf.Types.Hash poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "staked_amount" field.</summary>
    public const int StakedAmountFieldNumber = 3;
    private long stakedAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StakedAmount {
      get { return stakedAmount_; }
      set {
        stakedAmount_ = value;
      }
    }

    /// <summary>Field number for the "early_staked_amount" field.</summary>
    public const int EarlyStakedAmountFieldNumber = 4;
    private long earlyStakedAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long EarlyStakedAmount {
      get { return earlyStakedAmount_; }
      set {
        earlyStakedAmount_ = value;
      }
    }

    /// <summary>Field number for the "staked_block_number" field.</summary>
    public const int StakedBlockNumberFieldNumber = 5;
    private long stakedBlockNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StakedBlockNumber {
      get { return stakedBlockNumber_; }
      set {
        stakedBlockNumber_ = value;
      }
    }

    /// <summary>Field number for the "staked_time" field.</summary>
    public const int StakedTimeFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Timestamp stakedTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StakedTime {
      get { return stakedTime_; }
      set {
        stakedTime_ = value;
      }
    }

    /// <summary>Field number for the "period" field.</summary>
    public const int PeriodFieldNumber = 7;
    private long period_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Period {
      get { return period_; }
      set {
        period_ = value;
      }
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 8;
    private global::AElf.Types.Address account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    /// <summary>Field number for the "boosted_amount" field.</summary>
    public const int BoostedAmountFieldNumber = 9;
    private long boostedAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long BoostedAmount {
      get { return boostedAmount_; }
      set {
        boostedAmount_ = value;
      }
    }

    /// <summary>Field number for the "reward_debt" field.</summary>
    public const int RewardDebtFieldNumber = 10;
    private long rewardDebt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RewardDebt {
      get { return rewardDebt_; }
      set {
        rewardDebt_ = value;
      }
    }

    /// <summary>Field number for the "unlock_time" field.</summary>
    public const int UnlockTimeFieldNumber = 11;
    private global::Google.Protobuf.WellKnownTypes.Timestamp unlockTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UnlockTime {
      get { return unlockTime_; }
      set {
        unlockTime_ = value;
      }
    }

    /// <summary>Field number for the "reward_amount" field.</summary>
    public const int RewardAmountFieldNumber = 12;
    private long rewardAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RewardAmount {
      get { return rewardAmount_; }
      set {
        rewardAmount_ = value;
      }
    }

    /// <summary>Field number for the "locked_reward_amount" field.</summary>
    public const int LockedRewardAmountFieldNumber = 13;
    private long lockedRewardAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long LockedRewardAmount {
      get { return lockedRewardAmount_; }
      set {
        lockedRewardAmount_ = value;
      }
    }

    /// <summary>Field number for the "claimed_amount" field.</summary>
    public const int ClaimedAmountFieldNumber = 14;
    private long claimedAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ClaimedAmount {
      get { return claimedAmount_; }
      set {
        claimedAmount_ = value;
      }
    }

    /// <summary>Field number for the "staking_token" field.</summary>
    public const int StakingTokenFieldNumber = 15;
    private string stakingToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StakingToken {
      get { return stakingToken_; }
      set {
        stakingToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "last_operation_time" field.</summary>
    public const int LastOperationTimeFieldNumber = 16;
    private global::Google.Protobuf.WellKnownTypes.Timestamp lastOperationTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LastOperationTime {
      get { return lastOperationTime_; }
      set {
        lastOperationTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StakeInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StakeInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(StakeId, other.StakeId)) return false;
      if (!object.Equals(PoolId, other.PoolId)) return false;
      if (StakedAmount != other.StakedAmount) return false;
      if (EarlyStakedAmount != other.EarlyStakedAmount) return false;
      if (StakedBlockNumber != other.StakedBlockNumber) return false;
      if (!object.Equals(StakedTime, other.StakedTime)) return false;
      if (Period != other.Period) return false;
      if (!object.Equals(Account, other.Account)) return false;
      if (BoostedAmount != other.BoostedAmount) return false;
      if (RewardDebt != other.RewardDebt) return false;
      if (!object.Equals(UnlockTime, other.UnlockTime)) return false;
      if (RewardAmount != other.RewardAmount) return false;
      if (LockedRewardAmount != other.LockedRewardAmount) return false;
      if (ClaimedAmount != other.ClaimedAmount) return false;
      if (StakingToken != other.StakingToken) return false;
      if (!object.Equals(LastOperationTime, other.LastOperationTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (stakeId_ != null) hash ^= StakeId.GetHashCode();
      if (poolId_ != null) hash ^= PoolId.GetHashCode();
      if (StakedAmount != 0L) hash ^= StakedAmount.GetHashCode();
      if (EarlyStakedAmount != 0L) hash ^= EarlyStakedAmount.GetHashCode();
      if (StakedBlockNumber != 0L) hash ^= StakedBlockNumber.GetHashCode();
      if (stakedTime_ != null) hash ^= StakedTime.GetHashCode();
      if (Period != 0L) hash ^= Period.GetHashCode();
      if (account_ != null) hash ^= Account.GetHashCode();
      if (BoostedAmount != 0L) hash ^= BoostedAmount.GetHashCode();
      if (RewardDebt != 0L) hash ^= RewardDebt.GetHashCode();
      if (unlockTime_ != null) hash ^= UnlockTime.GetHashCode();
      if (RewardAmount != 0L) hash ^= RewardAmount.GetHashCode();
      if (LockedRewardAmount != 0L) hash ^= LockedRewardAmount.GetHashCode();
      if (ClaimedAmount != 0L) hash ^= ClaimedAmount.GetHashCode();
      if (StakingToken.Length != 0) hash ^= StakingToken.GetHashCode();
      if (lastOperationTime_ != null) hash ^= LastOperationTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (stakeId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StakeId);
      }
      if (poolId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PoolId);
      }
      if (StakedAmount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(StakedAmount);
      }
      if (EarlyStakedAmount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(EarlyStakedAmount);
      }
      if (StakedBlockNumber != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(StakedBlockNumber);
      }
      if (stakedTime_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(StakedTime);
      }
      if (Period != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(Period);
      }
      if (account_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Account);
      }
      if (BoostedAmount != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(BoostedAmount);
      }
      if (RewardDebt != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(RewardDebt);
      }
      if (unlockTime_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(UnlockTime);
      }
      if (RewardAmount != 0L) {
        output.WriteRawTag(96);
        output.WriteInt64(RewardAmount);
      }
      if (LockedRewardAmount != 0L) {
        output.WriteRawTag(104);
        output.WriteInt64(LockedRewardAmount);
      }
      if (ClaimedAmount != 0L) {
        output.WriteRawTag(112);
        output.WriteInt64(ClaimedAmount);
      }
      if (StakingToken.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(StakingToken);
      }
      if (lastOperationTime_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(LastOperationTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (stakeId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StakeId);
      }
      if (poolId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PoolId);
      }
      if (StakedAmount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(StakedAmount);
      }
      if (EarlyStakedAmount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(EarlyStakedAmount);
      }
      if (StakedBlockNumber != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(StakedBlockNumber);
      }
      if (stakedTime_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(StakedTime);
      }
      if (Period != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(Period);
      }
      if (account_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Account);
      }
      if (BoostedAmount != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(BoostedAmount);
      }
      if (RewardDebt != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(RewardDebt);
      }
      if (unlockTime_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(UnlockTime);
      }
      if (RewardAmount != 0L) {
        output.WriteRawTag(96);
        output.WriteInt64(RewardAmount);
      }
      if (LockedRewardAmount != 0L) {
        output.WriteRawTag(104);
        output.WriteInt64(LockedRewardAmount);
      }
      if (ClaimedAmount != 0L) {
        output.WriteRawTag(112);
        output.WriteInt64(ClaimedAmount);
      }
      if (StakingToken.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(StakingToken);
      }
      if (lastOperationTime_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(LastOperationTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (stakeId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StakeId);
      }
      if (poolId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolId);
      }
      if (StakedAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StakedAmount);
      }
      if (EarlyStakedAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EarlyStakedAmount);
      }
      if (StakedBlockNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StakedBlockNumber);
      }
      if (stakedTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StakedTime);
      }
      if (Period != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Period);
      }
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      if (BoostedAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BoostedAmount);
      }
      if (RewardDebt != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RewardDebt);
      }
      if (unlockTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UnlockTime);
      }
      if (RewardAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RewardAmount);
      }
      if (LockedRewardAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LockedRewardAmount);
      }
      if (ClaimedAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ClaimedAmount);
      }
      if (StakingToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StakingToken);
      }
      if (lastOperationTime_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LastOperationTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StakeInfo other) {
      if (other == null) {
        return;
      }
      if (other.stakeId_ != null) {
        if (stakeId_ == null) {
          StakeId = new global::AElf.Types.Hash();
        }
        StakeId.MergeFrom(other.StakeId);
      }
      if (other.poolId_ != null) {
        if (poolId_ == null) {
          PoolId = new global::AElf.Types.Hash();
        }
        PoolId.MergeFrom(other.PoolId);
      }
      if (other.StakedAmount != 0L) {
        StakedAmount = other.StakedAmount;
      }
      if (other.EarlyStakedAmount != 0L) {
        EarlyStakedAmount = other.EarlyStakedAmount;
      }
      if (other.StakedBlockNumber != 0L) {
        StakedBlockNumber = other.StakedBlockNumber;
      }
      if (other.stakedTime_ != null) {
        if (stakedTime_ == null) {
          StakedTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StakedTime.MergeFrom(other.StakedTime);
      }
      if (other.Period != 0L) {
        Period = other.Period;
      }
      if (other.account_ != null) {
        if (account_ == null) {
          Account = new global::AElf.Types.Address();
        }
        Account.MergeFrom(other.Account);
      }
      if (other.BoostedAmount != 0L) {
        BoostedAmount = other.BoostedAmount;
      }
      if (other.RewardDebt != 0L) {
        RewardDebt = other.RewardDebt;
      }
      if (other.unlockTime_ != null) {
        if (unlockTime_ == null) {
          UnlockTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UnlockTime.MergeFrom(other.UnlockTime);
      }
      if (other.RewardAmount != 0L) {
        RewardAmount = other.RewardAmount;
      }
      if (other.LockedRewardAmount != 0L) {
        LockedRewardAmount = other.LockedRewardAmount;
      }
      if (other.ClaimedAmount != 0L) {
        ClaimedAmount = other.ClaimedAmount;
      }
      if (other.StakingToken.Length != 0) {
        StakingToken = other.StakingToken;
      }
      if (other.lastOperationTime_ != null) {
        if (lastOperationTime_ == null) {
          LastOperationTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LastOperationTime.MergeFrom(other.LastOperationTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (stakeId_ == null) {
              StakeId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(StakeId);
            break;
          }
          case 18: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 24: {
            StakedAmount = input.ReadInt64();
            break;
          }
          case 32: {
            EarlyStakedAmount = input.ReadInt64();
            break;
          }
          case 40: {
            StakedBlockNumber = input.ReadInt64();
            break;
          }
          case 50: {
            if (stakedTime_ == null) {
              StakedTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StakedTime);
            break;
          }
          case 56: {
            Period = input.ReadInt64();
            break;
          }
          case 66: {
            if (account_ == null) {
              Account = new global::AElf.Types.Address();
            }
            input.ReadMessage(Account);
            break;
          }
          case 72: {
            BoostedAmount = input.ReadInt64();
            break;
          }
          case 80: {
            RewardDebt = input.ReadInt64();
            break;
          }
          case 90: {
            if (unlockTime_ == null) {
              UnlockTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UnlockTime);
            break;
          }
          case 96: {
            RewardAmount = input.ReadInt64();
            break;
          }
          case 104: {
            LockedRewardAmount = input.ReadInt64();
            break;
          }
          case 112: {
            ClaimedAmount = input.ReadInt64();
            break;
          }
          case 122: {
            StakingToken = input.ReadString();
            break;
          }
          case 130: {
            if (lastOperationTime_ == null) {
              LastOperationTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastOperationTime);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (stakeId_ == null) {
              StakeId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(StakeId);
            break;
          }
          case 18: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 24: {
            StakedAmount = input.ReadInt64();
            break;
          }
          case 32: {
            EarlyStakedAmount = input.ReadInt64();
            break;
          }
          case 40: {
            StakedBlockNumber = input.ReadInt64();
            break;
          }
          case 50: {
            if (stakedTime_ == null) {
              StakedTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StakedTime);
            break;
          }
          case 56: {
            Period = input.ReadInt64();
            break;
          }
          case 66: {
            if (account_ == null) {
              Account = new global::AElf.Types.Address();
            }
            input.ReadMessage(Account);
            break;
          }
          case 72: {
            BoostedAmount = input.ReadInt64();
            break;
          }
          case 80: {
            RewardDebt = input.ReadInt64();
            break;
          }
          case 90: {
            if (unlockTime_ == null) {
              UnlockTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UnlockTime);
            break;
          }
          case 96: {
            RewardAmount = input.ReadInt64();
            break;
          }
          case 104: {
            LockedRewardAmount = input.ReadInt64();
            break;
          }
          case 112: {
            ClaimedAmount = input.ReadInt64();
            break;
          }
          case 122: {
            StakingToken = input.ReadString();
            break;
          }
          case 130: {
            if (lastOperationTime_ == null) {
              LastOperationTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastOperationTime);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EarlyStakeInput : pb::IMessage<EarlyStakeInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EarlyStakeInput> _parser = new pb::MessageParser<EarlyStakeInput>(() => new EarlyStakeInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EarlyStakeInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EarlyStakeInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EarlyStakeInput(EarlyStakeInput other) : this() {
      poolId_ = other.poolId_ != null ? other.poolId_.Clone() : null;
      period_ = other.period_;
      claimIds_ = other.claimIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EarlyStakeInput Clone() {
      return new EarlyStakeInput(this);
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 1;
    private global::AElf.Types.Hash poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "period" field.</summary>
    public const int PeriodFieldNumber = 2;
    private long period_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Period {
      get { return period_; }
      set {
        period_ = value;
      }
    }

    /// <summary>Field number for the "claim_ids" field.</summary>
    public const int ClaimIdsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::AElf.Types.Hash> _repeated_claimIds_codec
        = pb::FieldCodec.ForMessage(26, global::AElf.Types.Hash.Parser);
    private readonly pbc::RepeatedField<global::AElf.Types.Hash> claimIds_ = new pbc::RepeatedField<global::AElf.Types.Hash>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::AElf.Types.Hash> ClaimIds {
      get { return claimIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EarlyStakeInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EarlyStakeInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PoolId, other.PoolId)) return false;
      if (Period != other.Period) return false;
      if(!claimIds_.Equals(other.claimIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (poolId_ != null) hash ^= PoolId.GetHashCode();
      if (Period != 0L) hash ^= Period.GetHashCode();
      hash ^= claimIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (Period != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Period);
      }
      claimIds_.WriteTo(output, _repeated_claimIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (Period != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Period);
      }
      claimIds_.WriteTo(ref output, _repeated_claimIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (poolId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolId);
      }
      if (Period != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Period);
      }
      size += claimIds_.CalculateSize(_repeated_claimIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EarlyStakeInput other) {
      if (other == null) {
        return;
      }
      if (other.poolId_ != null) {
        if (poolId_ == null) {
          PoolId = new global::AElf.Types.Hash();
        }
        PoolId.MergeFrom(other.PoolId);
      }
      if (other.Period != 0L) {
        Period = other.Period;
      }
      claimIds_.Add(other.claimIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 16: {
            Period = input.ReadInt64();
            break;
          }
          case 26: {
            claimIds_.AddEntriesFrom(input, _repeated_claimIds_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 16: {
            Period = input.ReadInt64();
            break;
          }
          case 26: {
            claimIds_.AddEntriesFrom(ref input, _repeated_claimIds_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClaimInfo : pb::IMessage<ClaimInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClaimInfo> _parser = new pb::MessageParser<ClaimInfo>(() => new ClaimInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClaimInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClaimInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClaimInfo(ClaimInfo other) : this() {
      claimId_ = other.claimId_ != null ? other.claimId_.Clone() : null;
      poolId_ = other.poolId_ != null ? other.poolId_.Clone() : null;
      claimedAmount_ = other.claimedAmount_;
      claimedSymbol_ = other.claimedSymbol_;
      claimedBlockNumber_ = other.claimedBlockNumber_;
      claimedTime_ = other.claimedTime_ != null ? other.claimedTime_.Clone() : null;
      unlockTime_ = other.unlockTime_ != null ? other.unlockTime_.Clone() : null;
      withdrawTime_ = other.withdrawTime_ != null ? other.withdrawTime_.Clone() : null;
      account_ = other.account_ != null ? other.account_.Clone() : null;
      earlyStakeTime_ = other.earlyStakeTime_ != null ? other.earlyStakeTime_.Clone() : null;
      stakeId_ = other.stakeId_ != null ? other.stakeId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClaimInfo Clone() {
      return new ClaimInfo(this);
    }

    /// <summary>Field number for the "claim_id" field.</summary>
    public const int ClaimIdFieldNumber = 1;
    private global::AElf.Types.Hash claimId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash ClaimId {
      get { return claimId_; }
      set {
        claimId_ = value;
      }
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 2;
    private global::AElf.Types.Hash poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "claimed_amount" field.</summary>
    public const int ClaimedAmountFieldNumber = 3;
    private long claimedAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ClaimedAmount {
      get { return claimedAmount_; }
      set {
        claimedAmount_ = value;
      }
    }

    /// <summary>Field number for the "claimed_symbol" field.</summary>
    public const int ClaimedSymbolFieldNumber = 4;
    private string claimedSymbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClaimedSymbol {
      get { return claimedSymbol_; }
      set {
        claimedSymbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "claimed_block_number" field.</summary>
    public const int ClaimedBlockNumberFieldNumber = 5;
    private long claimedBlockNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ClaimedBlockNumber {
      get { return claimedBlockNumber_; }
      set {
        claimedBlockNumber_ = value;
      }
    }

    /// <summary>Field number for the "claimed_time" field.</summary>
    public const int ClaimedTimeFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Timestamp claimedTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ClaimedTime {
      get { return claimedTime_; }
      set {
        claimedTime_ = value;
      }
    }

    /// <summary>Field number for the "unlock_time" field.</summary>
    public const int UnlockTimeFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Timestamp unlockTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UnlockTime {
      get { return unlockTime_; }
      set {
        unlockTime_ = value;
      }
    }

    /// <summary>Field number for the "withdraw_time" field.</summary>
    public const int WithdrawTimeFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Timestamp withdrawTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp WithdrawTime {
      get { return withdrawTime_; }
      set {
        withdrawTime_ = value;
      }
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 9;
    private global::AElf.Types.Address account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    /// <summary>Field number for the "early_stake_time" field.</summary>
    public const int EarlyStakeTimeFieldNumber = 10;
    private global::Google.Protobuf.WellKnownTypes.Timestamp earlyStakeTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EarlyStakeTime {
      get { return earlyStakeTime_; }
      set {
        earlyStakeTime_ = value;
      }
    }

    /// <summary>Field number for the "stake_id" field.</summary>
    public const int StakeIdFieldNumber = 11;
    private global::AElf.Types.Hash stakeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash StakeId {
      get { return stakeId_; }
      set {
        stakeId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClaimInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClaimInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ClaimId, other.ClaimId)) return false;
      if (!object.Equals(PoolId, other.PoolId)) return false;
      if (ClaimedAmount != other.ClaimedAmount) return false;
      if (ClaimedSymbol != other.ClaimedSymbol) return false;
      if (ClaimedBlockNumber != other.ClaimedBlockNumber) return false;
      if (!object.Equals(ClaimedTime, other.ClaimedTime)) return false;
      if (!object.Equals(UnlockTime, other.UnlockTime)) return false;
      if (!object.Equals(WithdrawTime, other.WithdrawTime)) return false;
      if (!object.Equals(Account, other.Account)) return false;
      if (!object.Equals(EarlyStakeTime, other.EarlyStakeTime)) return false;
      if (!object.Equals(StakeId, other.StakeId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (claimId_ != null) hash ^= ClaimId.GetHashCode();
      if (poolId_ != null) hash ^= PoolId.GetHashCode();
      if (ClaimedAmount != 0L) hash ^= ClaimedAmount.GetHashCode();
      if (ClaimedSymbol.Length != 0) hash ^= ClaimedSymbol.GetHashCode();
      if (ClaimedBlockNumber != 0L) hash ^= ClaimedBlockNumber.GetHashCode();
      if (claimedTime_ != null) hash ^= ClaimedTime.GetHashCode();
      if (unlockTime_ != null) hash ^= UnlockTime.GetHashCode();
      if (withdrawTime_ != null) hash ^= WithdrawTime.GetHashCode();
      if (account_ != null) hash ^= Account.GetHashCode();
      if (earlyStakeTime_ != null) hash ^= EarlyStakeTime.GetHashCode();
      if (stakeId_ != null) hash ^= StakeId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (claimId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ClaimId);
      }
      if (poolId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PoolId);
      }
      if (ClaimedAmount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ClaimedAmount);
      }
      if (ClaimedSymbol.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ClaimedSymbol);
      }
      if (ClaimedBlockNumber != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(ClaimedBlockNumber);
      }
      if (claimedTime_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ClaimedTime);
      }
      if (unlockTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(UnlockTime);
      }
      if (withdrawTime_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(WithdrawTime);
      }
      if (account_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Account);
      }
      if (earlyStakeTime_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(EarlyStakeTime);
      }
      if (stakeId_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(StakeId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (claimId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ClaimId);
      }
      if (poolId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PoolId);
      }
      if (ClaimedAmount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ClaimedAmount);
      }
      if (ClaimedSymbol.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ClaimedSymbol);
      }
      if (ClaimedBlockNumber != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(ClaimedBlockNumber);
      }
      if (claimedTime_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ClaimedTime);
      }
      if (unlockTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(UnlockTime);
      }
      if (withdrawTime_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(WithdrawTime);
      }
      if (account_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Account);
      }
      if (earlyStakeTime_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(EarlyStakeTime);
      }
      if (stakeId_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(StakeId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (claimId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClaimId);
      }
      if (poolId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolId);
      }
      if (ClaimedAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ClaimedAmount);
      }
      if (ClaimedSymbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClaimedSymbol);
      }
      if (ClaimedBlockNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ClaimedBlockNumber);
      }
      if (claimedTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClaimedTime);
      }
      if (unlockTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UnlockTime);
      }
      if (withdrawTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WithdrawTime);
      }
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      if (earlyStakeTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EarlyStakeTime);
      }
      if (stakeId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StakeId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClaimInfo other) {
      if (other == null) {
        return;
      }
      if (other.claimId_ != null) {
        if (claimId_ == null) {
          ClaimId = new global::AElf.Types.Hash();
        }
        ClaimId.MergeFrom(other.ClaimId);
      }
      if (other.poolId_ != null) {
        if (poolId_ == null) {
          PoolId = new global::AElf.Types.Hash();
        }
        PoolId.MergeFrom(other.PoolId);
      }
      if (other.ClaimedAmount != 0L) {
        ClaimedAmount = other.ClaimedAmount;
      }
      if (other.ClaimedSymbol.Length != 0) {
        ClaimedSymbol = other.ClaimedSymbol;
      }
      if (other.ClaimedBlockNumber != 0L) {
        ClaimedBlockNumber = other.ClaimedBlockNumber;
      }
      if (other.claimedTime_ != null) {
        if (claimedTime_ == null) {
          ClaimedTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ClaimedTime.MergeFrom(other.ClaimedTime);
      }
      if (other.unlockTime_ != null) {
        if (unlockTime_ == null) {
          UnlockTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UnlockTime.MergeFrom(other.UnlockTime);
      }
      if (other.withdrawTime_ != null) {
        if (withdrawTime_ == null) {
          WithdrawTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        WithdrawTime.MergeFrom(other.WithdrawTime);
      }
      if (other.account_ != null) {
        if (account_ == null) {
          Account = new global::AElf.Types.Address();
        }
        Account.MergeFrom(other.Account);
      }
      if (other.earlyStakeTime_ != null) {
        if (earlyStakeTime_ == null) {
          EarlyStakeTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EarlyStakeTime.MergeFrom(other.EarlyStakeTime);
      }
      if (other.stakeId_ != null) {
        if (stakeId_ == null) {
          StakeId = new global::AElf.Types.Hash();
        }
        StakeId.MergeFrom(other.StakeId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (claimId_ == null) {
              ClaimId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(ClaimId);
            break;
          }
          case 18: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 24: {
            ClaimedAmount = input.ReadInt64();
            break;
          }
          case 34: {
            ClaimedSymbol = input.ReadString();
            break;
          }
          case 40: {
            ClaimedBlockNumber = input.ReadInt64();
            break;
          }
          case 50: {
            if (claimedTime_ == null) {
              ClaimedTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ClaimedTime);
            break;
          }
          case 58: {
            if (unlockTime_ == null) {
              UnlockTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UnlockTime);
            break;
          }
          case 66: {
            if (withdrawTime_ == null) {
              WithdrawTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(WithdrawTime);
            break;
          }
          case 74: {
            if (account_ == null) {
              Account = new global::AElf.Types.Address();
            }
            input.ReadMessage(Account);
            break;
          }
          case 82: {
            if (earlyStakeTime_ == null) {
              EarlyStakeTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EarlyStakeTime);
            break;
          }
          case 90: {
            if (stakeId_ == null) {
              StakeId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(StakeId);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (claimId_ == null) {
              ClaimId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(ClaimId);
            break;
          }
          case 18: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 24: {
            ClaimedAmount = input.ReadInt64();
            break;
          }
          case 34: {
            ClaimedSymbol = input.ReadString();
            break;
          }
          case 40: {
            ClaimedBlockNumber = input.ReadInt64();
            break;
          }
          case 50: {
            if (claimedTime_ == null) {
              ClaimedTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ClaimedTime);
            break;
          }
          case 58: {
            if (unlockTime_ == null) {
              UnlockTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UnlockTime);
            break;
          }
          case 66: {
            if (withdrawTime_ == null) {
              WithdrawTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(WithdrawTime);
            break;
          }
          case 74: {
            if (account_ == null) {
              Account = new global::AElf.Types.Address();
            }
            input.ReadMessage(Account);
            break;
          }
          case 82: {
            if (earlyStakeTime_ == null) {
              EarlyStakeTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EarlyStakeTime);
            break;
          }
          case 90: {
            if (stakeId_ == null) {
              StakeId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(StakeId);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClaimInfos : pb::IMessage<ClaimInfos>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClaimInfos> _parser = new pb::MessageParser<ClaimInfos>(() => new ClaimInfos());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClaimInfos> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClaimInfos() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClaimInfos(ClaimInfos other) : this() {
      data_ = other.data_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClaimInfos Clone() {
      return new ClaimInfos(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::EcoEarn.Contracts.Tokens.ClaimInfo> _repeated_data_codec
        = pb::FieldCodec.ForMessage(10, global::EcoEarn.Contracts.Tokens.ClaimInfo.Parser);
    private readonly pbc::RepeatedField<global::EcoEarn.Contracts.Tokens.ClaimInfo> data_ = new pbc::RepeatedField<global::EcoEarn.Contracts.Tokens.ClaimInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::EcoEarn.Contracts.Tokens.ClaimInfo> Data {
      get { return data_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClaimInfos);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClaimInfos other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!data_.Equals(other.data_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= data_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      data_.WriteTo(output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      data_.WriteTo(ref output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += data_.CalculateSize(_repeated_data_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClaimInfos other) {
      if (other == null) {
        return;
      }
      data_.Add(other.data_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            data_.AddEntriesFrom(ref input, _repeated_data_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class StakeForInput : pb::IMessage<StakeForInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StakeForInput> _parser = new pb::MessageParser<StakeForInput>(() => new StakeForInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StakeForInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StakeForInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StakeForInput(StakeForInput other) : this() {
      poolId_ = other.poolId_ != null ? other.poolId_.Clone() : null;
      amount_ = other.amount_;
      period_ = other.period_;
      address_ = other.address_ != null ? other.address_.Clone() : null;
      fromAddress_ = other.fromAddress_ != null ? other.fromAddress_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StakeForInput Clone() {
      return new StakeForInput(this);
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 1;
    private global::AElf.Types.Hash poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "period" field.</summary>
    public const int PeriodFieldNumber = 3;
    private long period_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Period {
      get { return period_; }
      set {
        period_ = value;
      }
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 4;
    private global::AElf.Types.Address address_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address Address {
      get { return address_; }
      set {
        address_ = value;
      }
    }

    /// <summary>Field number for the "from_address" field.</summary>
    public const int FromAddressFieldNumber = 5;
    private global::AElf.Types.Address fromAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address FromAddress {
      get { return fromAddress_; }
      set {
        fromAddress_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StakeForInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StakeForInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PoolId, other.PoolId)) return false;
      if (Amount != other.Amount) return false;
      if (Period != other.Period) return false;
      if (!object.Equals(Address, other.Address)) return false;
      if (!object.Equals(FromAddress, other.FromAddress)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (poolId_ != null) hash ^= PoolId.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (Period != 0L) hash ^= Period.GetHashCode();
      if (address_ != null) hash ^= Address.GetHashCode();
      if (fromAddress_ != null) hash ^= FromAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (Amount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Amount);
      }
      if (Period != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Period);
      }
      if (address_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Address);
      }
      if (fromAddress_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(FromAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (Amount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Amount);
      }
      if (Period != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Period);
      }
      if (address_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Address);
      }
      if (fromAddress_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(FromAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (poolId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolId);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (Period != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Period);
      }
      if (address_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Address);
      }
      if (fromAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FromAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StakeForInput other) {
      if (other == null) {
        return;
      }
      if (other.poolId_ != null) {
        if (poolId_ == null) {
          PoolId = new global::AElf.Types.Hash();
        }
        PoolId.MergeFrom(other.PoolId);
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      if (other.Period != 0L) {
        Period = other.Period;
      }
      if (other.address_ != null) {
        if (address_ == null) {
          Address = new global::AElf.Types.Address();
        }
        Address.MergeFrom(other.Address);
      }
      if (other.fromAddress_ != null) {
        if (fromAddress_ == null) {
          FromAddress = new global::AElf.Types.Address();
        }
        FromAddress.MergeFrom(other.FromAddress);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 16: {
            Amount = input.ReadInt64();
            break;
          }
          case 24: {
            Period = input.ReadInt64();
            break;
          }
          case 34: {
            if (address_ == null) {
              Address = new global::AElf.Types.Address();
            }
            input.ReadMessage(Address);
            break;
          }
          case 42: {
            if (fromAddress_ == null) {
              FromAddress = new global::AElf.Types.Address();
            }
            input.ReadMessage(FromAddress);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 16: {
            Amount = input.ReadInt64();
            break;
          }
          case 24: {
            Period = input.ReadInt64();
            break;
          }
          case 34: {
            if (address_ == null) {
              Address = new global::AElf.Types.Address();
            }
            input.ReadMessage(Address);
            break;
          }
          case 42: {
            if (fromAddress_ == null) {
              FromAddress = new global::AElf.Types.Address();
            }
            input.ReadMessage(FromAddress);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetRewardOutput : pb::IMessage<GetRewardOutput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetRewardOutput> _parser = new pb::MessageParser<GetRewardOutput>(() => new GetRewardOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetRewardOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetRewardOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetRewardOutput(GetRewardOutput other) : this() {
      stakeId_ = other.stakeId_ != null ? other.stakeId_.Clone() : null;
      account_ = other.account_ != null ? other.account_.Clone() : null;
      symbol_ = other.symbol_;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetRewardOutput Clone() {
      return new GetRewardOutput(this);
    }

    /// <summary>Field number for the "stake_id" field.</summary>
    public const int StakeIdFieldNumber = 1;
    private global::AElf.Types.Hash stakeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash StakeId {
      get { return stakeId_; }
      set {
        stakeId_ = value;
      }
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 2;
    private global::AElf.Types.Address account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 3;
    private string symbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 4;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetRewardOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetRewardOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(StakeId, other.StakeId)) return false;
      if (!object.Equals(Account, other.Account)) return false;
      if (Symbol != other.Symbol) return false;
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (stakeId_ != null) hash ^= StakeId.GetHashCode();
      if (account_ != null) hash ^= Account.GetHashCode();
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (stakeId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StakeId);
      }
      if (account_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Account);
      }
      if (Symbol.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Symbol);
      }
      if (Amount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (stakeId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StakeId);
      }
      if (account_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Account);
      }
      if (Symbol.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Symbol);
      }
      if (Amount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (stakeId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StakeId);
      }
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetRewardOutput other) {
      if (other == null) {
        return;
      }
      if (other.stakeId_ != null) {
        if (stakeId_ == null) {
          StakeId = new global::AElf.Types.Hash();
        }
        StakeId.MergeFrom(other.StakeId);
      }
      if (other.account_ != null) {
        if (account_ == null) {
          Account = new global::AElf.Types.Address();
        }
        Account.MergeFrom(other.Account);
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (stakeId_ == null) {
              StakeId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(StakeId);
            break;
          }
          case 18: {
            if (account_ == null) {
              Account = new global::AElf.Types.Address();
            }
            input.ReadMessage(Account);
            break;
          }
          case 26: {
            Symbol = input.ReadString();
            break;
          }
          case 32: {
            Amount = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (stakeId_ == null) {
              StakeId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(StakeId);
            break;
          }
          case 18: {
            if (account_ == null) {
              Account = new global::AElf.Types.Address();
            }
            input.ReadMessage(Account);
            break;
          }
          case 26: {
            Symbol = input.ReadString();
            break;
          }
          case 32: {
            Amount = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class WithdrawInput : pb::IMessage<WithdrawInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WithdrawInput> _parser = new pb::MessageParser<WithdrawInput>(() => new WithdrawInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<WithdrawInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WithdrawInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WithdrawInput(WithdrawInput other) : this() {
      claimIds_ = other.claimIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WithdrawInput Clone() {
      return new WithdrawInput(this);
    }

    /// <summary>Field number for the "claim_ids" field.</summary>
    public const int ClaimIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::AElf.Types.Hash> _repeated_claimIds_codec
        = pb::FieldCodec.ForMessage(10, global::AElf.Types.Hash.Parser);
    private readonly pbc::RepeatedField<global::AElf.Types.Hash> claimIds_ = new pbc::RepeatedField<global::AElf.Types.Hash>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::AElf.Types.Hash> ClaimIds {
      get { return claimIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as WithdrawInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(WithdrawInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!claimIds_.Equals(other.claimIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= claimIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      claimIds_.WriteTo(output, _repeated_claimIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      claimIds_.WriteTo(ref output, _repeated_claimIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += claimIds_.CalculateSize(_repeated_claimIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(WithdrawInput other) {
      if (other == null) {
        return;
      }
      claimIds_.Add(other.claimIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            claimIds_.AddEntriesFrom(input, _repeated_claimIds_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            claimIds_.AddEntriesFrom(ref input, _repeated_claimIds_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RecoverTokenInput : pb::IMessage<RecoverTokenInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RecoverTokenInput> _parser = new pb::MessageParser<RecoverTokenInput>(() => new RecoverTokenInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RecoverTokenInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RecoverTokenInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RecoverTokenInput(RecoverTokenInput other) : this() {
      poolId_ = other.poolId_ != null ? other.poolId_.Clone() : null;
      token_ = other.token_;
      recipient_ = other.recipient_ != null ? other.recipient_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RecoverTokenInput Clone() {
      return new RecoverTokenInput(this);
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 1;
    private global::AElf.Types.Hash poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 2;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "recipient" field.</summary>
    public const int RecipientFieldNumber = 3;
    private global::AElf.Types.Address recipient_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address Recipient {
      get { return recipient_; }
      set {
        recipient_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RecoverTokenInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RecoverTokenInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PoolId, other.PoolId)) return false;
      if (Token != other.Token) return false;
      if (!object.Equals(Recipient, other.Recipient)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (poolId_ != null) hash ^= PoolId.GetHashCode();
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (recipient_ != null) hash ^= Recipient.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Token);
      }
      if (recipient_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Recipient);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Token);
      }
      if (recipient_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Recipient);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (poolId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolId);
      }
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (recipient_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Recipient);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RecoverTokenInput other) {
      if (other == null) {
        return;
      }
      if (other.poolId_ != null) {
        if (poolId_ == null) {
          PoolId = new global::AElf.Types.Hash();
        }
        PoolId.MergeFrom(other.PoolId);
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      if (other.recipient_ != null) {
        if (recipient_ == null) {
          Recipient = new global::AElf.Types.Address();
        }
        Recipient.MergeFrom(other.Recipient);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 18: {
            Token = input.ReadString();
            break;
          }
          case 26: {
            if (recipient_ == null) {
              Recipient = new global::AElf.Types.Address();
            }
            input.ReadMessage(Recipient);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 18: {
            Token = input.ReadString();
            break;
          }
          case 26: {
            if (recipient_ == null) {
              Recipient = new global::AElf.Types.Address();
            }
            input.ReadMessage(Recipient);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UpdateStakeInfoInput : pb::IMessage<UpdateStakeInfoInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateStakeInfoInput> _parser = new pb::MessageParser<UpdateStakeInfoInput>(() => new UpdateStakeInfoInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpdateStakeInfoInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateStakeInfoInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateStakeInfoInput(UpdateStakeInfoInput other) : this() {
      stakeIds_ = other.stakeIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateStakeInfoInput Clone() {
      return new UpdateStakeInfoInput(this);
    }

    /// <summary>Field number for the "stake_ids" field.</summary>
    public const int StakeIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::AElf.Types.Hash> _repeated_stakeIds_codec
        = pb::FieldCodec.ForMessage(10, global::AElf.Types.Hash.Parser);
    private readonly pbc::RepeatedField<global::AElf.Types.Hash> stakeIds_ = new pbc::RepeatedField<global::AElf.Types.Hash>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::AElf.Types.Hash> StakeIds {
      get { return stakeIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpdateStakeInfoInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpdateStakeInfoInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!stakeIds_.Equals(other.stakeIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= stakeIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      stakeIds_.WriteTo(output, _repeated_stakeIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      stakeIds_.WriteTo(ref output, _repeated_stakeIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += stakeIds_.CalculateSize(_repeated_stakeIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpdateStakeInfoInput other) {
      if (other == null) {
        return;
      }
      stakeIds_.Add(other.stakeIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            stakeIds_.AddEntriesFrom(input, _repeated_stakeIds_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            stakeIds_.AddEntriesFrom(ref input, _repeated_stakeIds_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class HashList : pb::IMessage<HashList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HashList> _parser = new pb::MessageParser<HashList>(() => new HashList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<HashList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HashList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HashList(HashList other) : this() {
      data_ = other.data_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HashList Clone() {
      return new HashList(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::AElf.Types.Hash> _repeated_data_codec
        = pb::FieldCodec.ForMessage(10, global::AElf.Types.Hash.Parser);
    private readonly pbc::RepeatedField<global::AElf.Types.Hash> data_ = new pbc::RepeatedField<global::AElf.Types.Hash>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::AElf.Types.Hash> Data {
      get { return data_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as HashList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(HashList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!data_.Equals(other.data_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= data_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      data_.WriteTo(output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      data_.WriteTo(ref output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += data_.CalculateSize(_repeated_data_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(HashList other) {
      if (other == null) {
        return;
      }
      data_.Add(other.data_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            data_.AddEntriesFrom(ref input, _repeated_data_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PoolDatas : pb::IMessage<PoolDatas>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PoolDatas> _parser = new pb::MessageParser<PoolDatas>(() => new PoolDatas());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PoolDatas> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PoolDatas() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PoolDatas(PoolDatas other) : this() {
      data_ = other.data_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PoolDatas Clone() {
      return new PoolDatas(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::EcoEarn.Contracts.Tokens.PoolData> _repeated_data_codec
        = pb::FieldCodec.ForMessage(10, global::EcoEarn.Contracts.Tokens.PoolData.Parser);
    private readonly pbc::RepeatedField<global::EcoEarn.Contracts.Tokens.PoolData> data_ = new pbc::RepeatedField<global::EcoEarn.Contracts.Tokens.PoolData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::EcoEarn.Contracts.Tokens.PoolData> Data {
      get { return data_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PoolDatas);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PoolDatas other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!data_.Equals(other.data_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= data_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      data_.WriteTo(output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      data_.WriteTo(ref output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += data_.CalculateSize(_repeated_data_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PoolDatas other) {
      if (other == null) {
        return;
      }
      data_.Add(other.data_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            data_.AddEntriesFrom(ref input, _repeated_data_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class InitializeInput : pb::IMessage<InitializeInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InitializeInput> _parser = new pb::MessageParser<InitializeInput>(() => new InitializeInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<InitializeInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InitializeInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InitializeInput(InitializeInput other) : this() {
      admin_ = other.admin_ != null ? other.admin_.Clone() : null;
      ecoearnPointsContract_ = other.ecoearnPointsContract_ != null ? other.ecoearnPointsContract_.Clone() : null;
      commissionRate_ = other.commissionRate_;
      recipient_ = other.recipient_ != null ? other.recipient_.Clone() : null;
      isRegisterRestricted_ = other.isRegisterRestricted_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InitializeInput Clone() {
      return new InitializeInput(this);
    }

    /// <summary>Field number for the "admin" field.</summary>
    public const int AdminFieldNumber = 1;
    private global::AElf.Types.Address admin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address Admin {
      get { return admin_; }
      set {
        admin_ = value;
      }
    }

    /// <summary>Field number for the "ecoearn_points_contract" field.</summary>
    public const int EcoearnPointsContractFieldNumber = 2;
    private global::AElf.Types.Address ecoearnPointsContract_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address EcoearnPointsContract {
      get { return ecoearnPointsContract_; }
      set {
        ecoearnPointsContract_ = value;
      }
    }

    /// <summary>Field number for the "commission_rate" field.</summary>
    public const int CommissionRateFieldNumber = 3;
    private long commissionRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CommissionRate {
      get { return commissionRate_; }
      set {
        commissionRate_ = value;
      }
    }

    /// <summary>Field number for the "recipient" field.</summary>
    public const int RecipientFieldNumber = 4;
    private global::AElf.Types.Address recipient_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address Recipient {
      get { return recipient_; }
      set {
        recipient_ = value;
      }
    }

    /// <summary>Field number for the "is_register_restricted" field.</summary>
    public const int IsRegisterRestrictedFieldNumber = 5;
    private bool isRegisterRestricted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsRegisterRestricted {
      get { return isRegisterRestricted_; }
      set {
        isRegisterRestricted_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as InitializeInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(InitializeInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Admin, other.Admin)) return false;
      if (!object.Equals(EcoearnPointsContract, other.EcoearnPointsContract)) return false;
      if (CommissionRate != other.CommissionRate) return false;
      if (!object.Equals(Recipient, other.Recipient)) return false;
      if (IsRegisterRestricted != other.IsRegisterRestricted) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (admin_ != null) hash ^= Admin.GetHashCode();
      if (ecoearnPointsContract_ != null) hash ^= EcoearnPointsContract.GetHashCode();
      if (CommissionRate != 0L) hash ^= CommissionRate.GetHashCode();
      if (recipient_ != null) hash ^= Recipient.GetHashCode();
      if (IsRegisterRestricted != false) hash ^= IsRegisterRestricted.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (admin_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Admin);
      }
      if (ecoearnPointsContract_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EcoearnPointsContract);
      }
      if (CommissionRate != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(CommissionRate);
      }
      if (recipient_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Recipient);
      }
      if (IsRegisterRestricted != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsRegisterRestricted);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (admin_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Admin);
      }
      if (ecoearnPointsContract_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EcoearnPointsContract);
      }
      if (CommissionRate != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(CommissionRate);
      }
      if (recipient_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Recipient);
      }
      if (IsRegisterRestricted != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsRegisterRestricted);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (admin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Admin);
      }
      if (ecoearnPointsContract_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EcoearnPointsContract);
      }
      if (CommissionRate != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CommissionRate);
      }
      if (recipient_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Recipient);
      }
      if (IsRegisterRestricted != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(InitializeInput other) {
      if (other == null) {
        return;
      }
      if (other.admin_ != null) {
        if (admin_ == null) {
          Admin = new global::AElf.Types.Address();
        }
        Admin.MergeFrom(other.Admin);
      }
      if (other.ecoearnPointsContract_ != null) {
        if (ecoearnPointsContract_ == null) {
          EcoearnPointsContract = new global::AElf.Types.Address();
        }
        EcoearnPointsContract.MergeFrom(other.EcoearnPointsContract);
      }
      if (other.CommissionRate != 0L) {
        CommissionRate = other.CommissionRate;
      }
      if (other.recipient_ != null) {
        if (recipient_ == null) {
          Recipient = new global::AElf.Types.Address();
        }
        Recipient.MergeFrom(other.Recipient);
      }
      if (other.IsRegisterRestricted != false) {
        IsRegisterRestricted = other.IsRegisterRestricted;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (admin_ == null) {
              Admin = new global::AElf.Types.Address();
            }
            input.ReadMessage(Admin);
            break;
          }
          case 18: {
            if (ecoearnPointsContract_ == null) {
              EcoearnPointsContract = new global::AElf.Types.Address();
            }
            input.ReadMessage(EcoearnPointsContract);
            break;
          }
          case 24: {
            CommissionRate = input.ReadInt64();
            break;
          }
          case 34: {
            if (recipient_ == null) {
              Recipient = new global::AElf.Types.Address();
            }
            input.ReadMessage(Recipient);
            break;
          }
          case 40: {
            IsRegisterRestricted = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (admin_ == null) {
              Admin = new global::AElf.Types.Address();
            }
            input.ReadMessage(Admin);
            break;
          }
          case 18: {
            if (ecoearnPointsContract_ == null) {
              EcoearnPointsContract = new global::AElf.Types.Address();
            }
            input.ReadMessage(EcoearnPointsContract);
            break;
          }
          case 24: {
            CommissionRate = input.ReadInt64();
            break;
          }
          case 34: {
            if (recipient_ == null) {
              Recipient = new global::AElf.Types.Address();
            }
            input.ReadMessage(Recipient);
            break;
          }
          case 40: {
            IsRegisterRestricted = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Config : pb::IMessage<Config>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Config> _parser = new pb::MessageParser<Config>(() => new Config());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Config> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Config() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Config(Config other) : this() {
      commissionRate_ = other.commissionRate_;
      recipient_ = other.recipient_ != null ? other.recipient_.Clone() : null;
      isRegisterRestricted_ = other.isRegisterRestricted_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Config Clone() {
      return new Config(this);
    }

    /// <summary>Field number for the "commission_rate" field.</summary>
    public const int CommissionRateFieldNumber = 1;
    private long commissionRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CommissionRate {
      get { return commissionRate_; }
      set {
        commissionRate_ = value;
      }
    }

    /// <summary>Field number for the "recipient" field.</summary>
    public const int RecipientFieldNumber = 2;
    private global::AElf.Types.Address recipient_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address Recipient {
      get { return recipient_; }
      set {
        recipient_ = value;
      }
    }

    /// <summary>Field number for the "is_register_restricted" field.</summary>
    public const int IsRegisterRestrictedFieldNumber = 3;
    private bool isRegisterRestricted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsRegisterRestricted {
      get { return isRegisterRestricted_; }
      set {
        isRegisterRestricted_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Config);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Config other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CommissionRate != other.CommissionRate) return false;
      if (!object.Equals(Recipient, other.Recipient)) return false;
      if (IsRegisterRestricted != other.IsRegisterRestricted) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (CommissionRate != 0L) hash ^= CommissionRate.GetHashCode();
      if (recipient_ != null) hash ^= Recipient.GetHashCode();
      if (IsRegisterRestricted != false) hash ^= IsRegisterRestricted.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CommissionRate != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(CommissionRate);
      }
      if (recipient_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Recipient);
      }
      if (IsRegisterRestricted != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsRegisterRestricted);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CommissionRate != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(CommissionRate);
      }
      if (recipient_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Recipient);
      }
      if (IsRegisterRestricted != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsRegisterRestricted);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (CommissionRate != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CommissionRate);
      }
      if (recipient_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Recipient);
      }
      if (IsRegisterRestricted != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Config other) {
      if (other == null) {
        return;
      }
      if (other.CommissionRate != 0L) {
        CommissionRate = other.CommissionRate;
      }
      if (other.recipient_ != null) {
        if (recipient_ == null) {
          Recipient = new global::AElf.Types.Address();
        }
        Recipient.MergeFrom(other.Recipient);
      }
      if (other.IsRegisterRestricted != false) {
        IsRegisterRestricted = other.IsRegisterRestricted;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CommissionRate = input.ReadInt64();
            break;
          }
          case 18: {
            if (recipient_ == null) {
              Recipient = new global::AElf.Types.Address();
            }
            input.ReadMessage(Recipient);
            break;
          }
          case 24: {
            IsRegisterRestricted = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CommissionRate = input.ReadInt64();
            break;
          }
          case 18: {
            if (recipient_ == null) {
              Recipient = new global::AElf.Types.Address();
            }
            input.ReadMessage(Recipient);
            break;
          }
          case 24: {
            IsRegisterRestricted = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SetDappAdminInput : pb::IMessage<SetDappAdminInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SetDappAdminInput> _parser = new pb::MessageParser<SetDappAdminInput>(() => new SetDappAdminInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SetDappAdminInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetDappAdminInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetDappAdminInput(SetDappAdminInput other) : this() {
      dappId_ = other.dappId_ != null ? other.dappId_.Clone() : null;
      admin_ = other.admin_ != null ? other.admin_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetDappAdminInput Clone() {
      return new SetDappAdminInput(this);
    }

    /// <summary>Field number for the "dapp_id" field.</summary>
    public const int DappIdFieldNumber = 1;
    private global::AElf.Types.Hash dappId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash DappId {
      get { return dappId_; }
      set {
        dappId_ = value;
      }
    }

    /// <summary>Field number for the "admin" field.</summary>
    public const int AdminFieldNumber = 2;
    private global::AElf.Types.Address admin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address Admin {
      get { return admin_; }
      set {
        admin_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SetDappAdminInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SetDappAdminInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DappId, other.DappId)) return false;
      if (!object.Equals(Admin, other.Admin)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (dappId_ != null) hash ^= DappId.GetHashCode();
      if (admin_ != null) hash ^= Admin.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (dappId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DappId);
      }
      if (admin_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Admin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (dappId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DappId);
      }
      if (admin_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Admin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (dappId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DappId);
      }
      if (admin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Admin);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SetDappAdminInput other) {
      if (other == null) {
        return;
      }
      if (other.dappId_ != null) {
        if (dappId_ == null) {
          DappId = new global::AElf.Types.Hash();
        }
        DappId.MergeFrom(other.DappId);
      }
      if (other.admin_ != null) {
        if (admin_ == null) {
          Admin = new global::AElf.Types.Address();
        }
        Admin.MergeFrom(other.Admin);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (dappId_ == null) {
              DappId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(DappId);
            break;
          }
          case 18: {
            if (admin_ == null) {
              Admin = new global::AElf.Types.Address();
            }
            input.ReadMessage(Admin);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (dappId_ == null) {
              DappId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(DappId);
            break;
          }
          case 18: {
            if (admin_ == null) {
              Admin = new global::AElf.Types.Address();
            }
            input.ReadMessage(Admin);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetUserStakeIdInput : pb::IMessage<GetUserStakeIdInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetUserStakeIdInput> _parser = new pb::MessageParser<GetUserStakeIdInput>(() => new GetUserStakeIdInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetUserStakeIdInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetUserStakeIdInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetUserStakeIdInput(GetUserStakeIdInput other) : this() {
      poolId_ = other.poolId_ != null ? other.poolId_.Clone() : null;
      account_ = other.account_ != null ? other.account_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetUserStakeIdInput Clone() {
      return new GetUserStakeIdInput(this);
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 1;
    private global::AElf.Types.Hash poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 2;
    private global::AElf.Types.Address account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetUserStakeIdInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetUserStakeIdInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PoolId, other.PoolId)) return false;
      if (!object.Equals(Account, other.Account)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (poolId_ != null) hash ^= PoolId.GetHashCode();
      if (account_ != null) hash ^= Account.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (account_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Account);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (account_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Account);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (poolId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolId);
      }
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetUserStakeIdInput other) {
      if (other == null) {
        return;
      }
      if (other.poolId_ != null) {
        if (poolId_ == null) {
          PoolId = new global::AElf.Types.Hash();
        }
        PoolId.MergeFrom(other.PoolId);
      }
      if (other.account_ != null) {
        if (account_ == null) {
          Account = new global::AElf.Types.Address();
        }
        Account.MergeFrom(other.Account);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 18: {
            if (account_ == null) {
              Account = new global::AElf.Types.Address();
            }
            input.ReadMessage(Account);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 18: {
            if (account_ == null) {
              Account = new global::AElf.Types.Address();
            }
            input.ReadMessage(Account);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetUserStakeCountInput : pb::IMessage<GetUserStakeCountInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetUserStakeCountInput> _parser = new pb::MessageParser<GetUserStakeCountInput>(() => new GetUserStakeCountInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetUserStakeCountInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetUserStakeCountInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetUserStakeCountInput(GetUserStakeCountInput other) : this() {
      poolId_ = other.poolId_ != null ? other.poolId_.Clone() : null;
      account_ = other.account_ != null ? other.account_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetUserStakeCountInput Clone() {
      return new GetUserStakeCountInput(this);
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 1;
    private global::AElf.Types.Hash poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 2;
    private global::AElf.Types.Address account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetUserStakeCountInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetUserStakeCountInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PoolId, other.PoolId)) return false;
      if (!object.Equals(Account, other.Account)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (poolId_ != null) hash ^= PoolId.GetHashCode();
      if (account_ != null) hash ^= Account.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (account_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Account);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (account_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Account);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (poolId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolId);
      }
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetUserStakeCountInput other) {
      if (other == null) {
        return;
      }
      if (other.poolId_ != null) {
        if (poolId_ == null) {
          PoolId = new global::AElf.Types.Hash();
        }
        PoolId.MergeFrom(other.PoolId);
      }
      if (other.account_ != null) {
        if (account_ == null) {
          Account = new global::AElf.Types.Address();
        }
        Account.MergeFrom(other.Account);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 18: {
            if (account_ == null) {
              Account = new global::AElf.Types.Address();
            }
            input.ReadMessage(Account);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 18: {
            if (account_ == null) {
              Account = new global::AElf.Types.Address();
            }
            input.ReadMessage(Account);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EarlyStakeInfo : pb::IMessage<EarlyStakeInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EarlyStakeInfo> _parser = new pb::MessageParser<EarlyStakeInfo>(() => new EarlyStakeInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EarlyStakeInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EarlyStakeInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EarlyStakeInfo(EarlyStakeInfo other) : this() {
      data_ = other.data_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EarlyStakeInfo Clone() {
      return new EarlyStakeInfo(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private static readonly pbc::MapField<string, long>.Codec _map_data_codec
        = new pbc::MapField<string, long>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForInt64(16, 0L), 10);
    private readonly pbc::MapField<string, long> data_ = new pbc::MapField<string, long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, long> Data {
      get { return data_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EarlyStakeInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EarlyStakeInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Data.Equals(other.Data)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      data_.WriteTo(output, _map_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      data_.WriteTo(ref output, _map_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += data_.CalculateSize(_map_data_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EarlyStakeInfo other) {
      if (other == null) {
        return;
      }
      data_.Add(other.data_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            data_.AddEntriesFrom(input, _map_data_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            data_.AddEntriesFrom(ref input, _map_data_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PoolAddressInfo : pb::IMessage<PoolAddressInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PoolAddressInfo> _parser = new pb::MessageParser<PoolAddressInfo>(() => new PoolAddressInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PoolAddressInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PoolAddressInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PoolAddressInfo(PoolAddressInfo other) : this() {
      stakeAddress_ = other.stakeAddress_ != null ? other.stakeAddress_.Clone() : null;
      rewardAddress_ = other.rewardAddress_ != null ? other.rewardAddress_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PoolAddressInfo Clone() {
      return new PoolAddressInfo(this);
    }

    /// <summary>Field number for the "stake_address" field.</summary>
    public const int StakeAddressFieldNumber = 1;
    private global::AElf.Types.Address stakeAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address StakeAddress {
      get { return stakeAddress_; }
      set {
        stakeAddress_ = value;
      }
    }

    /// <summary>Field number for the "reward_address" field.</summary>
    public const int RewardAddressFieldNumber = 2;
    private global::AElf.Types.Address rewardAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address RewardAddress {
      get { return rewardAddress_; }
      set {
        rewardAddress_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PoolAddressInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PoolAddressInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(StakeAddress, other.StakeAddress)) return false;
      if (!object.Equals(RewardAddress, other.RewardAddress)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (stakeAddress_ != null) hash ^= StakeAddress.GetHashCode();
      if (rewardAddress_ != null) hash ^= RewardAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (stakeAddress_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StakeAddress);
      }
      if (rewardAddress_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RewardAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (stakeAddress_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StakeAddress);
      }
      if (rewardAddress_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RewardAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (stakeAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StakeAddress);
      }
      if (rewardAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RewardAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PoolAddressInfo other) {
      if (other == null) {
        return;
      }
      if (other.stakeAddress_ != null) {
        if (stakeAddress_ == null) {
          StakeAddress = new global::AElf.Types.Address();
        }
        StakeAddress.MergeFrom(other.StakeAddress);
      }
      if (other.rewardAddress_ != null) {
        if (rewardAddress_ == null) {
          RewardAddress = new global::AElf.Types.Address();
        }
        RewardAddress.MergeFrom(other.RewardAddress);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (stakeAddress_ == null) {
              StakeAddress = new global::AElf.Types.Address();
            }
            input.ReadMessage(StakeAddress);
            break;
          }
          case 18: {
            if (rewardAddress_ == null) {
              RewardAddress = new global::AElf.Types.Address();
            }
            input.ReadMessage(RewardAddress);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (stakeAddress_ == null) {
              StakeAddress = new global::AElf.Types.Address();
            }
            input.ReadMessage(StakeAddress);
            break;
          }
          case 18: {
            if (rewardAddress_ == null) {
              RewardAddress = new global::AElf.Types.Address();
            }
            input.ReadMessage(RewardAddress);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// log event
  /// </summary>
  public sealed partial class Registered : pb::IMessage<Registered>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Registered> _parser = new pb::MessageParser<Registered>(() => new Registered());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Registered> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Registered() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Registered(Registered other) : this() {
      dappId_ = other.dappId_ != null ? other.dappId_.Clone() : null;
      admin_ = other.admin_ != null ? other.admin_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Registered Clone() {
      return new Registered(this);
    }

    /// <summary>Field number for the "dapp_id" field.</summary>
    public const int DappIdFieldNumber = 1;
    private global::AElf.Types.Hash dappId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash DappId {
      get { return dappId_; }
      set {
        dappId_ = value;
      }
    }

    /// <summary>Field number for the "admin" field.</summary>
    public const int AdminFieldNumber = 2;
    private global::AElf.Types.Address admin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address Admin {
      get { return admin_; }
      set {
        admin_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Registered);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Registered other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DappId, other.DappId)) return false;
      if (!object.Equals(Admin, other.Admin)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (dappId_ != null) hash ^= DappId.GetHashCode();
      if (admin_ != null) hash ^= Admin.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (dappId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DappId);
      }
      if (admin_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Admin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (dappId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DappId);
      }
      if (admin_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Admin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (dappId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DappId);
      }
      if (admin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Admin);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Registered other) {
      if (other == null) {
        return;
      }
      if (other.dappId_ != null) {
        if (dappId_ == null) {
          DappId = new global::AElf.Types.Hash();
        }
        DappId.MergeFrom(other.DappId);
      }
      if (other.admin_ != null) {
        if (admin_ == null) {
          Admin = new global::AElf.Types.Address();
        }
        Admin.MergeFrom(other.Admin);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (dappId_ == null) {
              DappId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(DappId);
            break;
          }
          case 18: {
            if (admin_ == null) {
              Admin = new global::AElf.Types.Address();
            }
            input.ReadMessage(Admin);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (dappId_ == null) {
              DappId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(DappId);
            break;
          }
          case 18: {
            if (admin_ == null) {
              Admin = new global::AElf.Types.Address();
            }
            input.ReadMessage(Admin);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TokensPoolCreated : pb::IMessage<TokensPoolCreated>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TokensPoolCreated> _parser = new pb::MessageParser<TokensPoolCreated>(() => new TokensPoolCreated());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TokensPoolCreated> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokensPoolCreated() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokensPoolCreated(TokensPoolCreated other) : this() {
      dappId_ = other.dappId_ != null ? other.dappId_.Clone() : null;
      config_ = other.config_ != null ? other.config_.Clone() : null;
      poolId_ = other.poolId_ != null ? other.poolId_.Clone() : null;
      amount_ = other.amount_;
      addressInfo_ = other.addressInfo_ != null ? other.addressInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokensPoolCreated Clone() {
      return new TokensPoolCreated(this);
    }

    /// <summary>Field number for the "dapp_id" field.</summary>
    public const int DappIdFieldNumber = 1;
    private global::AElf.Types.Hash dappId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash DappId {
      get { return dappId_; }
      set {
        dappId_ = value;
      }
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 2;
    private global::EcoEarn.Contracts.Tokens.TokensPoolConfig config_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EcoEarn.Contracts.Tokens.TokensPoolConfig Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 3;
    private global::AElf.Types.Hash poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 4;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "address_info" field.</summary>
    public const int AddressInfoFieldNumber = 5;
    private global::EcoEarn.Contracts.Tokens.PoolAddressInfo addressInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EcoEarn.Contracts.Tokens.PoolAddressInfo AddressInfo {
      get { return addressInfo_; }
      set {
        addressInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TokensPoolCreated);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TokensPoolCreated other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DappId, other.DappId)) return false;
      if (!object.Equals(Config, other.Config)) return false;
      if (!object.Equals(PoolId, other.PoolId)) return false;
      if (Amount != other.Amount) return false;
      if (!object.Equals(AddressInfo, other.AddressInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (dappId_ != null) hash ^= DappId.GetHashCode();
      if (config_ != null) hash ^= Config.GetHashCode();
      if (poolId_ != null) hash ^= PoolId.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (addressInfo_ != null) hash ^= AddressInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (dappId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DappId);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (poolId_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PoolId);
      }
      if (Amount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Amount);
      }
      if (addressInfo_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(AddressInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (dappId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DappId);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (poolId_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PoolId);
      }
      if (Amount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Amount);
      }
      if (addressInfo_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(AddressInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (dappId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DappId);
      }
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (poolId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolId);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (addressInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddressInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TokensPoolCreated other) {
      if (other == null) {
        return;
      }
      if (other.dappId_ != null) {
        if (dappId_ == null) {
          DappId = new global::AElf.Types.Hash();
        }
        DappId.MergeFrom(other.DappId);
      }
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::EcoEarn.Contracts.Tokens.TokensPoolConfig();
        }
        Config.MergeFrom(other.Config);
      }
      if (other.poolId_ != null) {
        if (poolId_ == null) {
          PoolId = new global::AElf.Types.Hash();
        }
        PoolId.MergeFrom(other.PoolId);
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      if (other.addressInfo_ != null) {
        if (addressInfo_ == null) {
          AddressInfo = new global::EcoEarn.Contracts.Tokens.PoolAddressInfo();
        }
        AddressInfo.MergeFrom(other.AddressInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (dappId_ == null) {
              DappId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(DappId);
            break;
          }
          case 18: {
            if (config_ == null) {
              Config = new global::EcoEarn.Contracts.Tokens.TokensPoolConfig();
            }
            input.ReadMessage(Config);
            break;
          }
          case 26: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 32: {
            Amount = input.ReadInt64();
            break;
          }
          case 42: {
            if (addressInfo_ == null) {
              AddressInfo = new global::EcoEarn.Contracts.Tokens.PoolAddressInfo();
            }
            input.ReadMessage(AddressInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (dappId_ == null) {
              DappId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(DappId);
            break;
          }
          case 18: {
            if (config_ == null) {
              Config = new global::EcoEarn.Contracts.Tokens.TokensPoolConfig();
            }
            input.ReadMessage(Config);
            break;
          }
          case 26: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 32: {
            Amount = input.ReadInt64();
            break;
          }
          case 42: {
            if (addressInfo_ == null) {
              AddressInfo = new global::EcoEarn.Contracts.Tokens.PoolAddressInfo();
            }
            input.ReadMessage(AddressInfo);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TokensPoolEndTimeSet : pb::IMessage<TokensPoolEndTimeSet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TokensPoolEndTimeSet> _parser = new pb::MessageParser<TokensPoolEndTimeSet>(() => new TokensPoolEndTimeSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TokensPoolEndTimeSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokensPoolEndTimeSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokensPoolEndTimeSet(TokensPoolEndTimeSet other) : this() {
      poolId_ = other.poolId_ != null ? other.poolId_.Clone() : null;
      endTime_ = other.endTime_ != null ? other.endTime_.Clone() : null;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokensPoolEndTimeSet Clone() {
      return new TokensPoolEndTimeSet(this);
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 1;
    private global::AElf.Types.Hash poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TokensPoolEndTimeSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TokensPoolEndTimeSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PoolId, other.PoolId)) return false;
      if (!object.Equals(EndTime, other.EndTime)) return false;
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (poolId_ != null) hash ^= PoolId.GetHashCode();
      if (endTime_ != null) hash ^= EndTime.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (endTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EndTime);
      }
      if (Amount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (endTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EndTime);
      }
      if (Amount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (poolId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolId);
      }
      if (endTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTime);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TokensPoolEndTimeSet other) {
      if (other == null) {
        return;
      }
      if (other.poolId_ != null) {
        if (poolId_ == null) {
          PoolId = new global::AElf.Types.Hash();
        }
        PoolId.MergeFrom(other.PoolId);
      }
      if (other.endTime_ != null) {
        if (endTime_ == null) {
          EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTime.MergeFrom(other.EndTime);
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 18: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 24: {
            Amount = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 18: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 24: {
            Amount = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TokensPoolUpdateAddressSet : pb::IMessage<TokensPoolUpdateAddressSet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TokensPoolUpdateAddressSet> _parser = new pb::MessageParser<TokensPoolUpdateAddressSet>(() => new TokensPoolUpdateAddressSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TokensPoolUpdateAddressSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokensPoolUpdateAddressSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokensPoolUpdateAddressSet(TokensPoolUpdateAddressSet other) : this() {
      poolId_ = other.poolId_ != null ? other.poolId_.Clone() : null;
      updateAddress_ = other.updateAddress_ != null ? other.updateAddress_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokensPoolUpdateAddressSet Clone() {
      return new TokensPoolUpdateAddressSet(this);
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 1;
    private global::AElf.Types.Hash poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "update_address" field.</summary>
    public const int UpdateAddressFieldNumber = 2;
    private global::AElf.Types.Address updateAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address UpdateAddress {
      get { return updateAddress_; }
      set {
        updateAddress_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TokensPoolUpdateAddressSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TokensPoolUpdateAddressSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PoolId, other.PoolId)) return false;
      if (!object.Equals(UpdateAddress, other.UpdateAddress)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (poolId_ != null) hash ^= PoolId.GetHashCode();
      if (updateAddress_ != null) hash ^= UpdateAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (updateAddress_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UpdateAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (updateAddress_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UpdateAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (poolId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolId);
      }
      if (updateAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TokensPoolUpdateAddressSet other) {
      if (other == null) {
        return;
      }
      if (other.poolId_ != null) {
        if (poolId_ == null) {
          PoolId = new global::AElf.Types.Hash();
        }
        PoolId.MergeFrom(other.PoolId);
      }
      if (other.updateAddress_ != null) {
        if (updateAddress_ == null) {
          UpdateAddress = new global::AElf.Types.Address();
        }
        UpdateAddress.MergeFrom(other.UpdateAddress);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 18: {
            if (updateAddress_ == null) {
              UpdateAddress = new global::AElf.Types.Address();
            }
            input.ReadMessage(UpdateAddress);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 18: {
            if (updateAddress_ == null) {
              UpdateAddress = new global::AElf.Types.Address();
            }
            input.ReadMessage(UpdateAddress);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TokensPoolRewardReleasePeriodSet : pb::IMessage<TokensPoolRewardReleasePeriodSet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TokensPoolRewardReleasePeriodSet> _parser = new pb::MessageParser<TokensPoolRewardReleasePeriodSet>(() => new TokensPoolRewardReleasePeriodSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TokensPoolRewardReleasePeriodSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokensPoolRewardReleasePeriodSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokensPoolRewardReleasePeriodSet(TokensPoolRewardReleasePeriodSet other) : this() {
      poolId_ = other.poolId_ != null ? other.poolId_.Clone() : null;
      releasePeriod_ = other.releasePeriod_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokensPoolRewardReleasePeriodSet Clone() {
      return new TokensPoolRewardReleasePeriodSet(this);
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 1;
    private global::AElf.Types.Hash poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "release_period" field.</summary>
    public const int ReleasePeriodFieldNumber = 2;
    private long releasePeriod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ReleasePeriod {
      get { return releasePeriod_; }
      set {
        releasePeriod_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TokensPoolRewardReleasePeriodSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TokensPoolRewardReleasePeriodSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PoolId, other.PoolId)) return false;
      if (ReleasePeriod != other.ReleasePeriod) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (poolId_ != null) hash ^= PoolId.GetHashCode();
      if (ReleasePeriod != 0L) hash ^= ReleasePeriod.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (ReleasePeriod != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ReleasePeriod);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (ReleasePeriod != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ReleasePeriod);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (poolId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolId);
      }
      if (ReleasePeriod != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ReleasePeriod);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TokensPoolRewardReleasePeriodSet other) {
      if (other == null) {
        return;
      }
      if (other.poolId_ != null) {
        if (poolId_ == null) {
          PoolId = new global::AElf.Types.Hash();
        }
        PoolId.MergeFrom(other.PoolId);
      }
      if (other.ReleasePeriod != 0L) {
        ReleasePeriod = other.ReleasePeriod;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 16: {
            ReleasePeriod = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 16: {
            ReleasePeriod = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TokensPoolStakeConfigSet : pb::IMessage<TokensPoolStakeConfigSet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TokensPoolStakeConfigSet> _parser = new pb::MessageParser<TokensPoolStakeConfigSet>(() => new TokensPoolStakeConfigSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TokensPoolStakeConfigSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokensPoolStakeConfigSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokensPoolStakeConfigSet(TokensPoolStakeConfigSet other) : this() {
      poolId_ = other.poolId_ != null ? other.poolId_.Clone() : null;
      minimumAmount_ = other.minimumAmount_;
      maximumStakeDuration_ = other.maximumStakeDuration_;
      minimumClaimAmount_ = other.minimumClaimAmount_;
      minimumStakeDuration_ = other.minimumStakeDuration_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokensPoolStakeConfigSet Clone() {
      return new TokensPoolStakeConfigSet(this);
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 1;
    private global::AElf.Types.Hash poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "minimum_amount" field.</summary>
    public const int MinimumAmountFieldNumber = 2;
    private long minimumAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MinimumAmount {
      get { return minimumAmount_; }
      set {
        minimumAmount_ = value;
      }
    }

    /// <summary>Field number for the "maximum_stake_duration" field.</summary>
    public const int MaximumStakeDurationFieldNumber = 3;
    private long maximumStakeDuration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MaximumStakeDuration {
      get { return maximumStakeDuration_; }
      set {
        maximumStakeDuration_ = value;
      }
    }

    /// <summary>Field number for the "minimum_claim_amount" field.</summary>
    public const int MinimumClaimAmountFieldNumber = 4;
    private long minimumClaimAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MinimumClaimAmount {
      get { return minimumClaimAmount_; }
      set {
        minimumClaimAmount_ = value;
      }
    }

    /// <summary>Field number for the "minimum_stake_duration" field.</summary>
    public const int MinimumStakeDurationFieldNumber = 5;
    private long minimumStakeDuration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MinimumStakeDuration {
      get { return minimumStakeDuration_; }
      set {
        minimumStakeDuration_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TokensPoolStakeConfigSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TokensPoolStakeConfigSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PoolId, other.PoolId)) return false;
      if (MinimumAmount != other.MinimumAmount) return false;
      if (MaximumStakeDuration != other.MaximumStakeDuration) return false;
      if (MinimumClaimAmount != other.MinimumClaimAmount) return false;
      if (MinimumStakeDuration != other.MinimumStakeDuration) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (poolId_ != null) hash ^= PoolId.GetHashCode();
      if (MinimumAmount != 0L) hash ^= MinimumAmount.GetHashCode();
      if (MaximumStakeDuration != 0L) hash ^= MaximumStakeDuration.GetHashCode();
      if (MinimumClaimAmount != 0L) hash ^= MinimumClaimAmount.GetHashCode();
      if (MinimumStakeDuration != 0L) hash ^= MinimumStakeDuration.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (MinimumAmount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(MinimumAmount);
      }
      if (MaximumStakeDuration != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(MaximumStakeDuration);
      }
      if (MinimumClaimAmount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(MinimumClaimAmount);
      }
      if (MinimumStakeDuration != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(MinimumStakeDuration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (MinimumAmount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(MinimumAmount);
      }
      if (MaximumStakeDuration != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(MaximumStakeDuration);
      }
      if (MinimumClaimAmount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(MinimumClaimAmount);
      }
      if (MinimumStakeDuration != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(MinimumStakeDuration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (poolId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolId);
      }
      if (MinimumAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinimumAmount);
      }
      if (MaximumStakeDuration != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaximumStakeDuration);
      }
      if (MinimumClaimAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinimumClaimAmount);
      }
      if (MinimumStakeDuration != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinimumStakeDuration);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TokensPoolStakeConfigSet other) {
      if (other == null) {
        return;
      }
      if (other.poolId_ != null) {
        if (poolId_ == null) {
          PoolId = new global::AElf.Types.Hash();
        }
        PoolId.MergeFrom(other.PoolId);
      }
      if (other.MinimumAmount != 0L) {
        MinimumAmount = other.MinimumAmount;
      }
      if (other.MaximumStakeDuration != 0L) {
        MaximumStakeDuration = other.MaximumStakeDuration;
      }
      if (other.MinimumClaimAmount != 0L) {
        MinimumClaimAmount = other.MinimumClaimAmount;
      }
      if (other.MinimumStakeDuration != 0L) {
        MinimumStakeDuration = other.MinimumStakeDuration;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 16: {
            MinimumAmount = input.ReadInt64();
            break;
          }
          case 24: {
            MaximumStakeDuration = input.ReadInt64();
            break;
          }
          case 32: {
            MinimumClaimAmount = input.ReadInt64();
            break;
          }
          case 40: {
            MinimumStakeDuration = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 16: {
            MinimumAmount = input.ReadInt64();
            break;
          }
          case 24: {
            MaximumStakeDuration = input.ReadInt64();
            break;
          }
          case 32: {
            MinimumClaimAmount = input.ReadInt64();
            break;
          }
          case 40: {
            MinimumStakeDuration = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Staked : pb::IMessage<Staked>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Staked> _parser = new pb::MessageParser<Staked>(() => new Staked());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Staked> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Staked() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Staked(Staked other) : this() {
      stakeInfo_ = other.stakeInfo_ != null ? other.stakeInfo_.Clone() : null;
      poolData_ = other.poolData_ != null ? other.poolData_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Staked Clone() {
      return new Staked(this);
    }

    /// <summary>Field number for the "stake_info" field.</summary>
    public const int StakeInfoFieldNumber = 1;
    private global::EcoEarn.Contracts.Tokens.StakeInfo stakeInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EcoEarn.Contracts.Tokens.StakeInfo StakeInfo {
      get { return stakeInfo_; }
      set {
        stakeInfo_ = value;
      }
    }

    /// <summary>Field number for the "pool_data" field.</summary>
    public const int PoolDataFieldNumber = 2;
    private global::EcoEarn.Contracts.Tokens.PoolData poolData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EcoEarn.Contracts.Tokens.PoolData PoolData {
      get { return poolData_; }
      set {
        poolData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Staked);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Staked other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(StakeInfo, other.StakeInfo)) return false;
      if (!object.Equals(PoolData, other.PoolData)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (stakeInfo_ != null) hash ^= StakeInfo.GetHashCode();
      if (poolData_ != null) hash ^= PoolData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (stakeInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StakeInfo);
      }
      if (poolData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PoolData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (stakeInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StakeInfo);
      }
      if (poolData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PoolData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (stakeInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StakeInfo);
      }
      if (poolData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Staked other) {
      if (other == null) {
        return;
      }
      if (other.stakeInfo_ != null) {
        if (stakeInfo_ == null) {
          StakeInfo = new global::EcoEarn.Contracts.Tokens.StakeInfo();
        }
        StakeInfo.MergeFrom(other.StakeInfo);
      }
      if (other.poolData_ != null) {
        if (poolData_ == null) {
          PoolData = new global::EcoEarn.Contracts.Tokens.PoolData();
        }
        PoolData.MergeFrom(other.PoolData);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (stakeInfo_ == null) {
              StakeInfo = new global::EcoEarn.Contracts.Tokens.StakeInfo();
            }
            input.ReadMessage(StakeInfo);
            break;
          }
          case 18: {
            if (poolData_ == null) {
              PoolData = new global::EcoEarn.Contracts.Tokens.PoolData();
            }
            input.ReadMessage(PoolData);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (stakeInfo_ == null) {
              StakeInfo = new global::EcoEarn.Contracts.Tokens.StakeInfo();
            }
            input.ReadMessage(StakeInfo);
            break;
          }
          case 18: {
            if (poolData_ == null) {
              PoolData = new global::EcoEarn.Contracts.Tokens.PoolData();
            }
            input.ReadMessage(PoolData);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EarlyStaked : pb::IMessage<EarlyStaked>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EarlyStaked> _parser = new pb::MessageParser<EarlyStaked>(() => new EarlyStaked());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EarlyStaked> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EarlyStaked() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EarlyStaked(EarlyStaked other) : this() {
      poolId_ = other.poolId_ != null ? other.poolId_.Clone() : null;
      stakeInfo_ = other.stakeInfo_ != null ? other.stakeInfo_.Clone() : null;
      poolData_ = other.poolData_ != null ? other.poolData_.Clone() : null;
      claimInfos_ = other.claimInfos_ != null ? other.claimInfos_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EarlyStaked Clone() {
      return new EarlyStaked(this);
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 1;
    private global::AElf.Types.Hash poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "stake_info" field.</summary>
    public const int StakeInfoFieldNumber = 2;
    private global::EcoEarn.Contracts.Tokens.StakeInfo stakeInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EcoEarn.Contracts.Tokens.StakeInfo StakeInfo {
      get { return stakeInfo_; }
      set {
        stakeInfo_ = value;
      }
    }

    /// <summary>Field number for the "pool_data" field.</summary>
    public const int PoolDataFieldNumber = 3;
    private global::EcoEarn.Contracts.Tokens.PoolData poolData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EcoEarn.Contracts.Tokens.PoolData PoolData {
      get { return poolData_; }
      set {
        poolData_ = value;
      }
    }

    /// <summary>Field number for the "claim_infos" field.</summary>
    public const int ClaimInfosFieldNumber = 4;
    private global::EcoEarn.Contracts.Tokens.ClaimInfos claimInfos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EcoEarn.Contracts.Tokens.ClaimInfos ClaimInfos {
      get { return claimInfos_; }
      set {
        claimInfos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EarlyStaked);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EarlyStaked other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PoolId, other.PoolId)) return false;
      if (!object.Equals(StakeInfo, other.StakeInfo)) return false;
      if (!object.Equals(PoolData, other.PoolData)) return false;
      if (!object.Equals(ClaimInfos, other.ClaimInfos)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (poolId_ != null) hash ^= PoolId.GetHashCode();
      if (stakeInfo_ != null) hash ^= StakeInfo.GetHashCode();
      if (poolData_ != null) hash ^= PoolData.GetHashCode();
      if (claimInfos_ != null) hash ^= ClaimInfos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (stakeInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(StakeInfo);
      }
      if (poolData_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PoolData);
      }
      if (claimInfos_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ClaimInfos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (stakeInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(StakeInfo);
      }
      if (poolData_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PoolData);
      }
      if (claimInfos_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ClaimInfos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (poolId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolId);
      }
      if (stakeInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StakeInfo);
      }
      if (poolData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolData);
      }
      if (claimInfos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClaimInfos);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EarlyStaked other) {
      if (other == null) {
        return;
      }
      if (other.poolId_ != null) {
        if (poolId_ == null) {
          PoolId = new global::AElf.Types.Hash();
        }
        PoolId.MergeFrom(other.PoolId);
      }
      if (other.stakeInfo_ != null) {
        if (stakeInfo_ == null) {
          StakeInfo = new global::EcoEarn.Contracts.Tokens.StakeInfo();
        }
        StakeInfo.MergeFrom(other.StakeInfo);
      }
      if (other.poolData_ != null) {
        if (poolData_ == null) {
          PoolData = new global::EcoEarn.Contracts.Tokens.PoolData();
        }
        PoolData.MergeFrom(other.PoolData);
      }
      if (other.claimInfos_ != null) {
        if (claimInfos_ == null) {
          ClaimInfos = new global::EcoEarn.Contracts.Tokens.ClaimInfos();
        }
        ClaimInfos.MergeFrom(other.ClaimInfos);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 18: {
            if (stakeInfo_ == null) {
              StakeInfo = new global::EcoEarn.Contracts.Tokens.StakeInfo();
            }
            input.ReadMessage(StakeInfo);
            break;
          }
          case 26: {
            if (poolData_ == null) {
              PoolData = new global::EcoEarn.Contracts.Tokens.PoolData();
            }
            input.ReadMessage(PoolData);
            break;
          }
          case 34: {
            if (claimInfos_ == null) {
              ClaimInfos = new global::EcoEarn.Contracts.Tokens.ClaimInfos();
            }
            input.ReadMessage(ClaimInfos);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 18: {
            if (stakeInfo_ == null) {
              StakeInfo = new global::EcoEarn.Contracts.Tokens.StakeInfo();
            }
            input.ReadMessage(StakeInfo);
            break;
          }
          case 26: {
            if (poolData_ == null) {
              PoolData = new global::EcoEarn.Contracts.Tokens.PoolData();
            }
            input.ReadMessage(PoolData);
            break;
          }
          case 34: {
            if (claimInfos_ == null) {
              ClaimInfos = new global::EcoEarn.Contracts.Tokens.ClaimInfos();
            }
            input.ReadMessage(ClaimInfos);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Unlocked : pb::IMessage<Unlocked>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Unlocked> _parser = new pb::MessageParser<Unlocked>(() => new Unlocked());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Unlocked> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Unlocked() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Unlocked(Unlocked other) : this() {
      stakeId_ = other.stakeId_ != null ? other.stakeId_.Clone() : null;
      stakedAmount_ = other.stakedAmount_;
      earlyStakedAmount_ = other.earlyStakedAmount_;
      poolData_ = other.poolData_ != null ? other.poolData_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Unlocked Clone() {
      return new Unlocked(this);
    }

    /// <summary>Field number for the "stake_id" field.</summary>
    public const int StakeIdFieldNumber = 1;
    private global::AElf.Types.Hash stakeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash StakeId {
      get { return stakeId_; }
      set {
        stakeId_ = value;
      }
    }

    /// <summary>Field number for the "staked_amount" field.</summary>
    public const int StakedAmountFieldNumber = 2;
    private long stakedAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StakedAmount {
      get { return stakedAmount_; }
      set {
        stakedAmount_ = value;
      }
    }

    /// <summary>Field number for the "early_staked_amount" field.</summary>
    public const int EarlyStakedAmountFieldNumber = 3;
    private long earlyStakedAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long EarlyStakedAmount {
      get { return earlyStakedAmount_; }
      set {
        earlyStakedAmount_ = value;
      }
    }

    /// <summary>Field number for the "pool_data" field.</summary>
    public const int PoolDataFieldNumber = 4;
    private global::EcoEarn.Contracts.Tokens.PoolData poolData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EcoEarn.Contracts.Tokens.PoolData PoolData {
      get { return poolData_; }
      set {
        poolData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Unlocked);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Unlocked other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(StakeId, other.StakeId)) return false;
      if (StakedAmount != other.StakedAmount) return false;
      if (EarlyStakedAmount != other.EarlyStakedAmount) return false;
      if (!object.Equals(PoolData, other.PoolData)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (stakeId_ != null) hash ^= StakeId.GetHashCode();
      if (StakedAmount != 0L) hash ^= StakedAmount.GetHashCode();
      if (EarlyStakedAmount != 0L) hash ^= EarlyStakedAmount.GetHashCode();
      if (poolData_ != null) hash ^= PoolData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (stakeId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StakeId);
      }
      if (StakedAmount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(StakedAmount);
      }
      if (EarlyStakedAmount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(EarlyStakedAmount);
      }
      if (poolData_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PoolData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (stakeId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StakeId);
      }
      if (StakedAmount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(StakedAmount);
      }
      if (EarlyStakedAmount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(EarlyStakedAmount);
      }
      if (poolData_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PoolData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (stakeId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StakeId);
      }
      if (StakedAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StakedAmount);
      }
      if (EarlyStakedAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EarlyStakedAmount);
      }
      if (poolData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Unlocked other) {
      if (other == null) {
        return;
      }
      if (other.stakeId_ != null) {
        if (stakeId_ == null) {
          StakeId = new global::AElf.Types.Hash();
        }
        StakeId.MergeFrom(other.StakeId);
      }
      if (other.StakedAmount != 0L) {
        StakedAmount = other.StakedAmount;
      }
      if (other.EarlyStakedAmount != 0L) {
        EarlyStakedAmount = other.EarlyStakedAmount;
      }
      if (other.poolData_ != null) {
        if (poolData_ == null) {
          PoolData = new global::EcoEarn.Contracts.Tokens.PoolData();
        }
        PoolData.MergeFrom(other.PoolData);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (stakeId_ == null) {
              StakeId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(StakeId);
            break;
          }
          case 16: {
            StakedAmount = input.ReadInt64();
            break;
          }
          case 24: {
            EarlyStakedAmount = input.ReadInt64();
            break;
          }
          case 34: {
            if (poolData_ == null) {
              PoolData = new global::EcoEarn.Contracts.Tokens.PoolData();
            }
            input.ReadMessage(PoolData);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (stakeId_ == null) {
              StakeId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(StakeId);
            break;
          }
          case 16: {
            StakedAmount = input.ReadInt64();
            break;
          }
          case 24: {
            EarlyStakedAmount = input.ReadInt64();
            break;
          }
          case 34: {
            if (poolData_ == null) {
              PoolData = new global::EcoEarn.Contracts.Tokens.PoolData();
            }
            input.ReadMessage(PoolData);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Claimed : pb::IMessage<Claimed>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Claimed> _parser = new pb::MessageParser<Claimed>(() => new Claimed());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Claimed> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Claimed() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Claimed(Claimed other) : this() {
      stakeId_ = other.stakeId_ != null ? other.stakeId_.Clone() : null;
      claimInfo_ = other.claimInfo_ != null ? other.claimInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Claimed Clone() {
      return new Claimed(this);
    }

    /// <summary>Field number for the "stake_id" field.</summary>
    public const int StakeIdFieldNumber = 1;
    private global::AElf.Types.Hash stakeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash StakeId {
      get { return stakeId_; }
      set {
        stakeId_ = value;
      }
    }

    /// <summary>Field number for the "claim_info" field.</summary>
    public const int ClaimInfoFieldNumber = 2;
    private global::EcoEarn.Contracts.Tokens.ClaimInfo claimInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EcoEarn.Contracts.Tokens.ClaimInfo ClaimInfo {
      get { return claimInfo_; }
      set {
        claimInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Claimed);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Claimed other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(StakeId, other.StakeId)) return false;
      if (!object.Equals(ClaimInfo, other.ClaimInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (stakeId_ != null) hash ^= StakeId.GetHashCode();
      if (claimInfo_ != null) hash ^= ClaimInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (stakeId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StakeId);
      }
      if (claimInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ClaimInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (stakeId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StakeId);
      }
      if (claimInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ClaimInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (stakeId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StakeId);
      }
      if (claimInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClaimInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Claimed other) {
      if (other == null) {
        return;
      }
      if (other.stakeId_ != null) {
        if (stakeId_ == null) {
          StakeId = new global::AElf.Types.Hash();
        }
        StakeId.MergeFrom(other.StakeId);
      }
      if (other.claimInfo_ != null) {
        if (claimInfo_ == null) {
          ClaimInfo = new global::EcoEarn.Contracts.Tokens.ClaimInfo();
        }
        ClaimInfo.MergeFrom(other.ClaimInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (stakeId_ == null) {
              StakeId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(StakeId);
            break;
          }
          case 18: {
            if (claimInfo_ == null) {
              ClaimInfo = new global::EcoEarn.Contracts.Tokens.ClaimInfo();
            }
            input.ReadMessage(ClaimInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (stakeId_ == null) {
              StakeId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(StakeId);
            break;
          }
          case 18: {
            if (claimInfo_ == null) {
              ClaimInfo = new global::EcoEarn.Contracts.Tokens.ClaimInfo();
            }
            input.ReadMessage(ClaimInfo);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Withdrawn : pb::IMessage<Withdrawn>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Withdrawn> _parser = new pb::MessageParser<Withdrawn>(() => new Withdrawn());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Withdrawn> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Withdrawn() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Withdrawn(Withdrawn other) : this() {
      claimInfos_ = other.claimInfos_ != null ? other.claimInfos_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Withdrawn Clone() {
      return new Withdrawn(this);
    }

    /// <summary>Field number for the "claim_infos" field.</summary>
    public const int ClaimInfosFieldNumber = 1;
    private global::EcoEarn.Contracts.Tokens.ClaimInfos claimInfos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EcoEarn.Contracts.Tokens.ClaimInfos ClaimInfos {
      get { return claimInfos_; }
      set {
        claimInfos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Withdrawn);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Withdrawn other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ClaimInfos, other.ClaimInfos)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (claimInfos_ != null) hash ^= ClaimInfos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (claimInfos_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ClaimInfos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (claimInfos_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ClaimInfos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (claimInfos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClaimInfos);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Withdrawn other) {
      if (other == null) {
        return;
      }
      if (other.claimInfos_ != null) {
        if (claimInfos_ == null) {
          ClaimInfos = new global::EcoEarn.Contracts.Tokens.ClaimInfos();
        }
        ClaimInfos.MergeFrom(other.ClaimInfos);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (claimInfos_ == null) {
              ClaimInfos = new global::EcoEarn.Contracts.Tokens.ClaimInfos();
            }
            input.ReadMessage(ClaimInfos);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (claimInfos_ == null) {
              ClaimInfos = new global::EcoEarn.Contracts.Tokens.ClaimInfos();
            }
            input.ReadMessage(ClaimInfos);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TokenRecovered : pb::IMessage<TokenRecovered>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TokenRecovered> _parser = new pb::MessageParser<TokenRecovered>(() => new TokenRecovered());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TokenRecovered> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokenRecovered() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokenRecovered(TokenRecovered other) : this() {
      poolId_ = other.poolId_ != null ? other.poolId_.Clone() : null;
      token_ = other.token_;
      amount_ = other.amount_;
      account_ = other.account_ != null ? other.account_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokenRecovered Clone() {
      return new TokenRecovered(this);
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 1;
    private global::AElf.Types.Hash poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 2;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 4;
    private global::AElf.Types.Address account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TokenRecovered);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TokenRecovered other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PoolId, other.PoolId)) return false;
      if (Token != other.Token) return false;
      if (Amount != other.Amount) return false;
      if (!object.Equals(Account, other.Account)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (poolId_ != null) hash ^= PoolId.GetHashCode();
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (account_ != null) hash ^= Account.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Token);
      }
      if (Amount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Amount);
      }
      if (account_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Account);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Token);
      }
      if (Amount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Amount);
      }
      if (account_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Account);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (poolId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolId);
      }
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TokenRecovered other) {
      if (other == null) {
        return;
      }
      if (other.poolId_ != null) {
        if (poolId_ == null) {
          PoolId = new global::AElf.Types.Hash();
        }
        PoolId.MergeFrom(other.PoolId);
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      if (other.account_ != null) {
        if (account_ == null) {
          Account = new global::AElf.Types.Address();
        }
        Account.MergeFrom(other.Account);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 18: {
            Token = input.ReadString();
            break;
          }
          case 24: {
            Amount = input.ReadInt64();
            break;
          }
          case 34: {
            if (account_ == null) {
              Account = new global::AElf.Types.Address();
            }
            input.ReadMessage(Account);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 18: {
            Token = input.ReadString();
            break;
          }
          case 24: {
            Amount = input.ReadInt64();
            break;
          }
          case 34: {
            if (account_ == null) {
              Account = new global::AElf.Types.Address();
            }
            input.ReadMessage(Account);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class StakeInfoUpdated : pb::IMessage<StakeInfoUpdated>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StakeInfoUpdated> _parser = new pb::MessageParser<StakeInfoUpdated>(() => new StakeInfoUpdated());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StakeInfoUpdated> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StakeInfoUpdated() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StakeInfoUpdated(StakeInfoUpdated other) : this() {
      stakeIds_ = other.stakeIds_ != null ? other.stakeIds_.Clone() : null;
      poolDatas_ = other.poolDatas_ != null ? other.poolDatas_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StakeInfoUpdated Clone() {
      return new StakeInfoUpdated(this);
    }

    /// <summary>Field number for the "stake_ids" field.</summary>
    public const int StakeIdsFieldNumber = 1;
    private global::EcoEarn.Contracts.Tokens.HashList stakeIds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EcoEarn.Contracts.Tokens.HashList StakeIds {
      get { return stakeIds_; }
      set {
        stakeIds_ = value;
      }
    }

    /// <summary>Field number for the "pool_datas" field.</summary>
    public const int PoolDatasFieldNumber = 2;
    private global::EcoEarn.Contracts.Tokens.PoolDatas poolDatas_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EcoEarn.Contracts.Tokens.PoolDatas PoolDatas {
      get { return poolDatas_; }
      set {
        poolDatas_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StakeInfoUpdated);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StakeInfoUpdated other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(StakeIds, other.StakeIds)) return false;
      if (!object.Equals(PoolDatas, other.PoolDatas)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (stakeIds_ != null) hash ^= StakeIds.GetHashCode();
      if (poolDatas_ != null) hash ^= PoolDatas.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (stakeIds_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StakeIds);
      }
      if (poolDatas_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PoolDatas);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (stakeIds_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StakeIds);
      }
      if (poolDatas_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PoolDatas);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (stakeIds_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StakeIds);
      }
      if (poolDatas_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolDatas);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StakeInfoUpdated other) {
      if (other == null) {
        return;
      }
      if (other.stakeIds_ != null) {
        if (stakeIds_ == null) {
          StakeIds = new global::EcoEarn.Contracts.Tokens.HashList();
        }
        StakeIds.MergeFrom(other.StakeIds);
      }
      if (other.poolDatas_ != null) {
        if (poolDatas_ == null) {
          PoolDatas = new global::EcoEarn.Contracts.Tokens.PoolDatas();
        }
        PoolDatas.MergeFrom(other.PoolDatas);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (stakeIds_ == null) {
              StakeIds = new global::EcoEarn.Contracts.Tokens.HashList();
            }
            input.ReadMessage(StakeIds);
            break;
          }
          case 18: {
            if (poolDatas_ == null) {
              PoolDatas = new global::EcoEarn.Contracts.Tokens.PoolDatas();
            }
            input.ReadMessage(PoolDatas);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (stakeIds_ == null) {
              StakeIds = new global::EcoEarn.Contracts.Tokens.HashList();
            }
            input.ReadMessage(StakeIds);
            break;
          }
          case 18: {
            if (poolDatas_ == null) {
              PoolDatas = new global::EcoEarn.Contracts.Tokens.PoolDatas();
            }
            input.ReadMessage(PoolDatas);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ConfigSet : pb::IMessage<ConfigSet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ConfigSet> _parser = new pb::MessageParser<ConfigSet>(() => new ConfigSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ConfigSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConfigSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConfigSet(ConfigSet other) : this() {
      config_ = other.config_ != null ? other.config_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConfigSet Clone() {
      return new ConfigSet(this);
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 1;
    private global::EcoEarn.Contracts.Tokens.Config config_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EcoEarn.Contracts.Tokens.Config Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ConfigSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ConfigSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Config, other.Config)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (config_ != null) hash ^= Config.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (config_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Config);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (config_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Config);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ConfigSet other) {
      if (other == null) {
        return;
      }
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::EcoEarn.Contracts.Tokens.Config();
        }
        Config.MergeFrom(other.Config);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (config_ == null) {
              Config = new global::EcoEarn.Contracts.Tokens.Config();
            }
            input.ReadMessage(Config);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (config_ == null) {
              Config = new global::EcoEarn.Contracts.Tokens.Config();
            }
            input.ReadMessage(Config);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AdminSet : pb::IMessage<AdminSet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AdminSet> _parser = new pb::MessageParser<AdminSet>(() => new AdminSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AdminSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AdminSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AdminSet(AdminSet other) : this() {
      admin_ = other.admin_ != null ? other.admin_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AdminSet Clone() {
      return new AdminSet(this);
    }

    /// <summary>Field number for the "admin" field.</summary>
    public const int AdminFieldNumber = 1;
    private global::AElf.Types.Address admin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address Admin {
      get { return admin_; }
      set {
        admin_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AdminSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AdminSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Admin, other.Admin)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (admin_ != null) hash ^= Admin.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (admin_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Admin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (admin_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Admin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (admin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Admin);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AdminSet other) {
      if (other == null) {
        return;
      }
      if (other.admin_ != null) {
        if (admin_ == null) {
          Admin = new global::AElf.Types.Address();
        }
        Admin.MergeFrom(other.Admin);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (admin_ == null) {
              Admin = new global::AElf.Types.Address();
            }
            input.ReadMessage(Admin);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (admin_ == null) {
              Admin = new global::AElf.Types.Address();
            }
            input.ReadMessage(Admin);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DappAdminSet : pb::IMessage<DappAdminSet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DappAdminSet> _parser = new pb::MessageParser<DappAdminSet>(() => new DappAdminSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DappAdminSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DappAdminSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DappAdminSet(DappAdminSet other) : this() {
      dappId_ = other.dappId_ != null ? other.dappId_.Clone() : null;
      admin_ = other.admin_ != null ? other.admin_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DappAdminSet Clone() {
      return new DappAdminSet(this);
    }

    /// <summary>Field number for the "dapp_id" field.</summary>
    public const int DappIdFieldNumber = 1;
    private global::AElf.Types.Hash dappId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash DappId {
      get { return dappId_; }
      set {
        dappId_ = value;
      }
    }

    /// <summary>Field number for the "admin" field.</summary>
    public const int AdminFieldNumber = 2;
    private global::AElf.Types.Address admin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address Admin {
      get { return admin_; }
      set {
        admin_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DappAdminSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DappAdminSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DappId, other.DappId)) return false;
      if (!object.Equals(Admin, other.Admin)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (dappId_ != null) hash ^= DappId.GetHashCode();
      if (admin_ != null) hash ^= Admin.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (dappId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DappId);
      }
      if (admin_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Admin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (dappId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DappId);
      }
      if (admin_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Admin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (dappId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DappId);
      }
      if (admin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Admin);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DappAdminSet other) {
      if (other == null) {
        return;
      }
      if (other.dappId_ != null) {
        if (dappId_ == null) {
          DappId = new global::AElf.Types.Hash();
        }
        DappId.MergeFrom(other.DappId);
      }
      if (other.admin_ != null) {
        if (admin_ == null) {
          Admin = new global::AElf.Types.Address();
        }
        Admin.MergeFrom(other.Admin);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (dappId_ == null) {
              DappId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(DappId);
            break;
          }
          case 18: {
            if (admin_ == null) {
              Admin = new global::AElf.Types.Address();
            }
            input.ReadMessage(Admin);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (dappId_ == null) {
              DappId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(DappId);
            break;
          }
          case 18: {
            if (admin_ == null) {
              Admin = new global::AElf.Types.Address();
            }
            input.ReadMessage(Admin);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TokensPoolFixedBoostFactorSet : pb::IMessage<TokensPoolFixedBoostFactorSet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TokensPoolFixedBoostFactorSet> _parser = new pb::MessageParser<TokensPoolFixedBoostFactorSet>(() => new TokensPoolFixedBoostFactorSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TokensPoolFixedBoostFactorSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokensPoolFixedBoostFactorSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokensPoolFixedBoostFactorSet(TokensPoolFixedBoostFactorSet other) : this() {
      poolId_ = other.poolId_ != null ? other.poolId_.Clone() : null;
      fixedBoostFactor_ = other.fixedBoostFactor_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokensPoolFixedBoostFactorSet Clone() {
      return new TokensPoolFixedBoostFactorSet(this);
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 1;
    private global::AElf.Types.Hash poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "fixed_boost_factor" field.</summary>
    public const int FixedBoostFactorFieldNumber = 2;
    private long fixedBoostFactor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long FixedBoostFactor {
      get { return fixedBoostFactor_; }
      set {
        fixedBoostFactor_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TokensPoolFixedBoostFactorSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TokensPoolFixedBoostFactorSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PoolId, other.PoolId)) return false;
      if (FixedBoostFactor != other.FixedBoostFactor) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (poolId_ != null) hash ^= PoolId.GetHashCode();
      if (FixedBoostFactor != 0L) hash ^= FixedBoostFactor.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (FixedBoostFactor != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(FixedBoostFactor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (FixedBoostFactor != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(FixedBoostFactor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (poolId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolId);
      }
      if (FixedBoostFactor != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FixedBoostFactor);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TokensPoolFixedBoostFactorSet other) {
      if (other == null) {
        return;
      }
      if (other.poolId_ != null) {
        if (poolId_ == null) {
          PoolId = new global::AElf.Types.Hash();
        }
        PoolId.MergeFrom(other.PoolId);
      }
      if (other.FixedBoostFactor != 0L) {
        FixedBoostFactor = other.FixedBoostFactor;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 16: {
            FixedBoostFactor = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 16: {
            FixedBoostFactor = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TokensPoolRewardPerSecondSet : pb::IMessage<TokensPoolRewardPerSecondSet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TokensPoolRewardPerSecondSet> _parser = new pb::MessageParser<TokensPoolRewardPerSecondSet>(() => new TokensPoolRewardPerSecondSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TokensPoolRewardPerSecondSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::EcoEarn.Contracts.Tokens.EcoearnTokensReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokensPoolRewardPerSecondSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokensPoolRewardPerSecondSet(TokensPoolRewardPerSecondSet other) : this() {
      poolId_ = other.poolId_ != null ? other.poolId_.Clone() : null;
      rewardPerSecond_ = other.rewardPerSecond_;
      poolData_ = other.poolData_ != null ? other.poolData_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokensPoolRewardPerSecondSet Clone() {
      return new TokensPoolRewardPerSecondSet(this);
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 1;
    private global::AElf.Types.Hash poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "reward_per_second" field.</summary>
    public const int RewardPerSecondFieldNumber = 2;
    private long rewardPerSecond_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RewardPerSecond {
      get { return rewardPerSecond_; }
      set {
        rewardPerSecond_ = value;
      }
    }

    /// <summary>Field number for the "pool_data" field.</summary>
    public const int PoolDataFieldNumber = 3;
    private global::EcoEarn.Contracts.Tokens.PoolData poolData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::EcoEarn.Contracts.Tokens.PoolData PoolData {
      get { return poolData_; }
      set {
        poolData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TokensPoolRewardPerSecondSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TokensPoolRewardPerSecondSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PoolId, other.PoolId)) return false;
      if (RewardPerSecond != other.RewardPerSecond) return false;
      if (!object.Equals(PoolData, other.PoolData)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (poolId_ != null) hash ^= PoolId.GetHashCode();
      if (RewardPerSecond != 0L) hash ^= RewardPerSecond.GetHashCode();
      if (poolData_ != null) hash ^= PoolData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (RewardPerSecond != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(RewardPerSecond);
      }
      if (poolData_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PoolData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (poolId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PoolId);
      }
      if (RewardPerSecond != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(RewardPerSecond);
      }
      if (poolData_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PoolData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (poolId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolId);
      }
      if (RewardPerSecond != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RewardPerSecond);
      }
      if (poolData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TokensPoolRewardPerSecondSet other) {
      if (other == null) {
        return;
      }
      if (other.poolId_ != null) {
        if (poolId_ == null) {
          PoolId = new global::AElf.Types.Hash();
        }
        PoolId.MergeFrom(other.PoolId);
      }
      if (other.RewardPerSecond != 0L) {
        RewardPerSecond = other.RewardPerSecond;
      }
      if (other.poolData_ != null) {
        if (poolData_ == null) {
          PoolData = new global::EcoEarn.Contracts.Tokens.PoolData();
        }
        PoolData.MergeFrom(other.PoolData);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 16: {
            RewardPerSecond = input.ReadInt64();
            break;
          }
          case 26: {
            if (poolData_ == null) {
              PoolData = new global::EcoEarn.Contracts.Tokens.PoolData();
            }
            input.ReadMessage(PoolData);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (poolId_ == null) {
              PoolId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PoolId);
            break;
          }
          case 16: {
            RewardPerSecond = input.ReadInt64();
            break;
          }
          case 26: {
            if (poolData_ == null) {
              PoolData = new global::EcoEarn.Contracts.Tokens.PoolData();
            }
            input.ReadMessage(PoolData);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
